# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-06-16 15:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: ../src/docs/books/admin_guide/01-presentation.md:12
#: ../src/docs/books/admin_guide/12-network.md:12
#: ../src/docs/books/learning_ansible/01-basic.md:15
#: ../src/docs/books/learning_ansible/02-advanced.md:12
#: ../src/docs/books/learning_ansible/03-working-with-files.md:12
#: ../src/docs/books/learning_ansible/04-ansible-galaxy.md:12
#: ../src/docs/books/learning_ansible/05-deployments.md:12
#: ../src/docs/books/learning_ansible/06-large-scale-infrastructure.md:12
#: ../src/docs/books/learning_ansible/07-working-with-filters.md:14
#: ../src/docs/books/learning_bash/01-first-script.md:19
#: ../src/docs/books/learning_bash/02-using-variables.md:19
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:19
#: ../src/docs/books/learning_bash/05-tests.md:17
#: ../src/docs/books/learning_bash/06-conditional-structures.md:17
#: ../src/docs/books/learning_bash/07-loops.md:17
#, no-wrap
msgid "**Objectives**: In this chapter you will learn how to:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/01-presentation.md:25
#: ../src/docs/books/learning_bash/01-first-script.md:30
#: ../src/docs/books/learning_bash/02-using-variables.md:31
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:31
#: ../src/docs/books/learning_bash/05-tests.md:29
#, no-wrap
msgid "**Reading time**: 10 minutes\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:296
#: ../src/docs/books/admin_guide/04-advanced-commands.md:338
#: ../src/docs/books/admin_guide/06-users.md:539
#: ../src/docs/books/admin_guide/06-users.md:622
#: ../src/docs/books/admin_guide/06-users.md:719
#: ../src/docs/books/admin_guide/06-users.md:798
#: ../src/docs/books/admin_guide/06-users.md:930
#: ../src/docs/books/admin_guide/11-tasks.md:216
#: ../src/docs/books/admin_guide/12-network.md:537
#: ../src/docs/books/admin_guide/03-commands.md:214
#: ../src/docs/books/admin_guide/03-commands.md:318
#: ../src/docs/books/admin_guide/03-commands.md:720
#: ../src/docs/books/admin_guide/03-commands.md:1399
#: ../src/docs/books/admin_guide/08-process.md:385
#: ../src/docs/books/admin_guide/09-backups.md:370
#: ../src/docs/books/admin_guide/09-backups.md:720
#: ../src/docs/books/admin_guide/10-boot.md:207
#: ../src/docs/books/admin_guide/13-softwares.md:925
#: ../src/docs/books/admin_guide/13-softwares.md:1009
#: ../src/docs/books/learning_ansible/01-basic.md:286
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:169
#: ../src/docs/books/learning_bash/06-conditional-structures.md:54
#: ../src/docs/books/learning_bash/06-conditional-structures.md:125
#: ../src/docs/guides/security/learning_selinux.md:289
#: ../src/docs/guides/security/pam.md:287
#, no-wrap
msgid "Examples:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/05-vi.md:44
#: ../src/docs/books/admin_guide/05-vi.md:397
#: ../src/docs/books/admin_guide/05-vi.md:405
#: ../src/docs/books/admin_guide/05-vi.md:411
#: ../src/docs/books/admin_guide/05-vi.md:417
#: ../src/docs/books/admin_guide/05-vi.md:423
#: ../src/docs/books/admin_guide/06-users.md:75
#: ../src/docs/books/admin_guide/06-users.md:113
#: ../src/docs/books/admin_guide/06-users.md:141
#: ../src/docs/books/admin_guide/06-users.md:279
#: ../src/docs/books/admin_guide/06-users.md:344
#: ../src/docs/books/admin_guide/06-users.md:369
#: ../src/docs/books/admin_guide/06-users.md:392
#: ../src/docs/books/admin_guide/06-users.md:588
#: ../src/docs/books/admin_guide/06-users.md:656
#: ../src/docs/books/admin_guide/06-users.md:671
#: ../src/docs/books/admin_guide/06-users.md:740
#: ../src/docs/books/admin_guide/06-users.md:764
#: ../src/docs/books/admin_guide/06-users.md:782
#: ../src/docs/books/admin_guide/11-tasks.md:140
#: ../src/docs/books/admin_guide/12-network.md:47
#: ../src/docs/books/admin_guide/12-network.md:481
#: ../src/docs/books/admin_guide/12-network.md:562
#: ../src/docs/books/admin_guide/12-network.md:583
#: ../src/docs/books/admin_guide/12-network.md:624
#: ../src/docs/books/admin_guide/12-network.md:649
#: ../src/docs/books/admin_guide/12-network.md:666
#: ../src/docs/books/admin_guide/12-network.md:694
#: ../src/docs/books/admin_guide/12-network.md:707
#: ../src/docs/books/admin_guide/12-network.md:720
#: ../src/docs/books/admin_guide/03-commands.md:126
#: ../src/docs/books/admin_guide/03-commands.md:162
#: ../src/docs/books/admin_guide/03-commands.md:470
#: ../src/docs/books/admin_guide/03-commands.md:619
#: ../src/docs/books/admin_guide/03-commands.md:641
#: ../src/docs/books/admin_guide/03-commands.md:661
#: ../src/docs/books/admin_guide/03-commands.md:778
#: ../src/docs/books/admin_guide/03-commands.md:826
#: ../src/docs/books/admin_guide/03-commands.md:842
#: ../src/docs/books/admin_guide/03-commands.md:962
#: ../src/docs/books/admin_guide/03-commands.md:985
#: ../src/docs/books/admin_guide/03-commands.md:1174
#: ../src/docs/books/admin_guide/03-commands.md:1195
#: ../src/docs/books/admin_guide/07-file-systems.md:132
#: ../src/docs/books/admin_guide/07-file-systems.md:237
#: ../src/docs/books/admin_guide/07-file-systems.md:267
#: ../src/docs/books/admin_guide/07-file-systems.md:286
#: ../src/docs/books/admin_guide/07-file-systems.md:313
#: ../src/docs/books/admin_guide/07-file-systems.md:327
#: ../src/docs/books/admin_guide/07-file-systems.md:341
#: ../src/docs/books/admin_guide/07-file-systems.md:379
#: ../src/docs/books/admin_guide/07-file-systems.md:490
#: ../src/docs/books/admin_guide/07-file-systems.md:612
#: ../src/docs/books/admin_guide/07-file-systems.md:639
#: ../src/docs/books/admin_guide/07-file-systems.md:993
#: ../src/docs/books/admin_guide/08-process.md:60
#: ../src/docs/books/admin_guide/08-process.md:198
#: ../src/docs/books/admin_guide/08-process.md:230
#: ../src/docs/books/admin_guide/08-process.md:250
#: ../src/docs/books/admin_guide/08-process.md:287
#: ../src/docs/books/admin_guide/08-process.md:312
#: ../src/docs/books/admin_guide/08-process.md:330
#: ../src/docs/books/admin_guide/09-backups.md:228
#: ../src/docs/books/admin_guide/09-backups.md:253
#: ../src/docs/books/admin_guide/09-backups.md:568
#: ../src/docs/books/admin_guide/09-backups.md:632
#: ../src/docs/books/admin_guide/09-backups.md:677
#: ../src/docs/books/admin_guide/09-backups.md:700
#: ../src/docs/books/admin_guide/09-backups.md:785
#: ../src/docs/books/admin_guide/09-backups.md:807
#: ../src/docs/books/admin_guide/09-backups.md:829
#: ../src/docs/books/admin_guide/09-backups.md:855
#: ../src/docs/books/admin_guide/10-boot.md:322
#: ../src/docs/books/admin_guide/13-softwares.md:67
#: ../src/docs/books/admin_guide/13-softwares.md:79
#: ../src/docs/books/admin_guide/13-softwares.md:152
#: ../src/docs/books/admin_guide/13-softwares.md:350
#: ../src/docs/books/admin_guide/13-softwares.md:505
#: ../src/docs/books/admin_guide/13-softwares.md:513
#: ../src/docs/books/learning_ansible/01-basic.md:180
#: ../src/docs/books/learning_ansible/07-working-with-filters.md:92
#: ../src/docs/books/learning_bash/01-first-script.md:119
#: ../src/docs/books/learning_bash/02-using-variables.md:128
#: ../src/docs/books/learning_bash/02-using-variables.md:142
#: ../src/docs/books/learning_bash/02-using-variables.md:204
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:118
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:216
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:338
#: ../src/docs/books/learning_bash/05-tests.md:141
#: ../src/docs/books/learning_bash/05-tests.md:199
#: ../src/docs/books/learning_bash/05-tests.md:222
#: ../src/docs/books/learning_bash/05-tests.md:313
#: ../src/docs/books/learning_bash/05-tests.md:338
#: ../src/docs/books/learning_bash/05-tests.md:354
#: ../src/docs/books/learning_bash/06-conditional-structures.md:101
#: ../src/docs/books/learning_bash/07-loops.md:128
#: ../src/docs/guides/security/learning_selinux.md:92
#: ../src/docs/guides/security/learning_selinux.md:147
#: ../src/docs/guides/security/learning_selinux.md:200
#: ../src/docs/guides/security/learning_selinux.md:213
#: ../src/docs/guides/security/learning_selinux.md:305
#: ../src/docs/guides/security/learning_selinux.md:321
#: ../src/docs/guides/security/learning_selinux.md:339
#: ../src/docs/guides/security/learning_selinux.md:360
#: ../src/docs/guides/security/learning_selinux.md:394
#: ../src/docs/guides/web/apache_hardened_webserver/modsecurity.md:154
#: ../src/docs/guides/web/php.md:255
#, no-wrap
msgid "Example:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/11-tasks.md:19
#: ../src/docs/books/admin_guide/12-network.md:21
#: ../src/docs/books/learning_bash/02-using-variables.md:27
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:27
#: ../src/docs/books/learning_bash/05-tests.md:25
#: ../src/docs/books/learning_bash/06-conditional-structures.md:23
#: ../src/docs/books/learning_bash/07-loops.md:22
#, no-wrap
msgid "**Knowledge**: :star: :star:  \n"
msgstr ""

#. type: Yaml Front Matter Array Element: tags
#: ../src/docs/books/admin_guide/13-softwares.md:1
#: ../src/docs/books/learning_bash/00-toc.md:1
#: ../src/docs/books/learning_bash/01-first-script.md:1
#: ../src/docs/books/learning_bash/02-using-variables.md:1
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:1
#: ../src/docs/books/learning_bash/04-check-your-knowledge.md:1
#: ../src/docs/books/learning_bash/05-tests.md:1
#: ../src/docs/books/learning_bash/06-conditional-structures.md:1
#: ../src/docs/books/learning_bash/07-loops.md:1
#: ../src/docs/books/learning_bash/08-check-your-knowledge.md:1
#, no-wrap
msgid "education"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/13-softwares.md:909
#: ../src/docs/books/learning_bash/00-toc.md:43
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:125
#: ../src/docs/books/learning_bash/05-tests.md:117
#: ../src/docs/books/learning_bash/05-tests.md:160
#: ../src/docs/guides/security/pam.md:325
#: ../src/docs/labs/security/lab9-cryptography.md:125
#: ../src/docs/labs/security/lab9-cryptography.md:322
#: ../src/docs/labs/security/lab9-cryptography.md:516
#, no-wrap
msgid "!!! NOTE\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/14-special-authority.md:338
#: ../src/docs/books/admin_guide/14-special-authority.md:354
#: ../src/docs/books/admin_guide/14-special-authority.md:404
#: ../src/docs/books/admin_guide/14-special-authority.md:435
#: ../src/docs/books/admin_guide/14-special-authority.md:690
#: ../src/docs/books/disa_stig/disa_stig_part2.md:83
#: ../src/docs/books/disa_stig/disa_stig_part2.md:102
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:253
#: ../src/docs/books/lxd_server/04-firewall.md:76
#: ../src/docs/books/lxd_server/08-snapshots.md:86
#: ../src/docs/gemstones/RL9_network_manager.md:150
#: ../src/docs/gemstones/nmtui.md:52
#: ../src/docs/gemstones/view_kernel_conf.md:21
#: ../src/docs/guides/backup/rsync_ssh.md:79
#: ../src/docs/guides/cms/dokuwiki_server.md:226
#: ../src/docs/guides/containers/lxd_web_servers.md:786
#: ../src/docs/guides/containers/podman-nextcloud.md:270
#: ../src/docs/guides/contribute/rockydocs_formatting.md:96
#: ../src/docs/guides/file_sharing/sftp.md:264
#: ../src/docs/guides/package_management/index.md:10
#: ../src/docs/guides/proxies/pound.md:211
#: ../src/docs/guides/proxies/pound.md:265 ../src/docs/release_notes/8_4.md:20
#, no-wrap
msgid "!!! warning\n"
msgstr ""

#. type: Yaml Front Matter Hash Value: contributors
#: ../src/docs/books/disa_stig/disa_stig_part2.md:1
#: ../src/docs/books/disa_stig/disa_stig_part3.md:1
#: ../src/docs/books/disa_stig/disa_stig_part1.md:1
#: ../src/docs/books/learning_ansible/07-working-with-filters.md:1
#: ../src/docs/books/learning_ansible/08-management-server-optimizations.md:1
#: ../src/docs/books/learning_bash/00-toc.md:1
#: ../src/docs/books/learning_bash/01-first-script.md:1
#: ../src/docs/books/learning_bash/02-using-variables.md:1
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:1
#: ../src/docs/books/learning_bash/04-check-your-knowledge.md:1
#: ../src/docs/books/learning_bash/05-tests.md:1
#: ../src/docs/books/learning_bash/06-conditional-structures.md:1
#: ../src/docs/books/learning_bash/07-loops.md:1
#: ../src/docs/books/learning_bash/08-check-your-knowledge.md:1
#: ../src/docs/books/learning_rsync/01_rsync_overview.md:1
#: ../src/docs/books/learning_rsync/02_rsync_demo01.md:1
#: ../src/docs/books/learning_rsync/03_rsync_demo02.md:1
#: ../src/docs/books/learning_rsync/05_rsync_authentication-free_login.md:1
#: ../src/docs/books/learning_rsync/06_rsync_inotify.md:1
#: ../src/docs/books/learning_rsync/07_rsync_unison_use.md:1
#: ../src/docs/books/nvchad/additional_software.md:1
#: ../src/docs/books/nvchad/index.md:1
#: ../src/docs/books/nvchad/install_nvchad.md:1
#: ../src/docs/books/nvchad/install_nvim.md:1
#: ../src/docs/books/nvchad/nerd_fonts.md:1
#: ../src/docs/books/nvchad/nvchad_ui/builtin_plugins.md:1
#: ../src/docs/books/nvchad/nvchad_ui/nvchad_ui.md:1
#: ../src/docs/books/nvchad/nvchad_ui/nvimtree.md:1
#: ../src/docs/books/nvchad/nvchad_ui/plugins_manager.md:1
#: ../src/docs/books/nvchad/nvchad_ui/using_nvchad.md:1
#: ../src/docs/books/nvchad/plugins/index.md:1
#: ../src/docs/books/nvchad/plugins/md_preview.md:1
#: ../src/docs/books/nvchad/plugins/projectmgr.md:1
#: ../src/docs/books/nvchad/template_chadrc.md:1
#: ../src/docs/gemstones/RL9_network_manager.md:1
#: ../src/docs/gemstones/htop.md:1 ../src/docs/gemstones/mtr.md:1
#: ../src/docs/gemstones/setup_local_repo.md:1
#: ../src/docs/gemstones/string_color.md:1
#: ../src/docs/gemstones/systemd_service_for_python_script.md:1
#: ../src/docs/gemstones/view_kernel_conf.md:1
#: ../src/docs/guides/automation/anacron.md:1
#: ../src/docs/guides/automation/cronie.md:1
#: ../src/docs/guides/automation/olivetin.md:1
#: ../src/docs/guides/communications/asterisk_installation.md:1
#: ../src/docs/guides/containers/lxd_web_servers.md:1
#: ../src/docs/guides/contribute/local_docs.md:1
#: ../src/docs/guides/contribute/mkdocs_venv.md:1
#: ../src/docs/guides/contribute/style_guide.md:1
#: ../src/docs/guides/editors/micro.md:1
#: ../src/docs/guides/file_sharing/glusterfs.md:1
#: ../src/docs/guides/installation.md:1
#: ../src/docs/guides/security/dnf_automatic.md:1
#: ../src/docs/guides/security/firewalld-beginners.md:1
#: ../src/docs/guides/web/nginx-multisite.md:1 ../src/docs/guides/web/php.md:1
#: ../src/docs/labs/sys_admin_1/lab7-software_management.md:1
#, no-wrap
msgid "Steven Spencer"
msgstr ""

#. type: Yaml Front Matter Array Element: tags
#: ../src/docs/books/learning_bash/00-toc.md:1
#: ../src/docs/books/learning_bash/01-first-script.md:1
#: ../src/docs/books/learning_bash/02-using-variables.md:1
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:1
#: ../src/docs/books/learning_bash/04-check-your-knowledge.md:1
#: ../src/docs/books/learning_bash/05-tests.md:1
#: ../src/docs/books/learning_bash/06-conditional-structures.md:1
#: ../src/docs/books/learning_bash/07-loops.md:1
#: ../src/docs/books/learning_bash/08-check-your-knowledge.md:1
#: ../src/docs/books/learning_bash/appendix/02-variables-logs.md:1
#, no-wrap
msgid "bash scripting"
msgstr ""

#. type: Yaml Front Matter Array Element: tags
#: ../src/docs/books/learning_bash/00-toc.md:1
#: ../src/docs/books/learning_bash/01-first-script.md:1
#: ../src/docs/books/learning_bash/02-using-variables.md:1
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:1
#: ../src/docs/books/learning_bash/04-check-your-knowledge.md:1
#: ../src/docs/books/learning_bash/05-tests.md:1
#: ../src/docs/books/learning_bash/06-conditional-structures.md:1
#: ../src/docs/books/learning_bash/07-loops.md:1
#: ../src/docs/books/learning_bash/08-check-your-knowledge.md:1
#: ../src/docs/books/learning_bash/appendix/02-variables-logs.md:1
#: ../src/docs/gemstones/string_color.md:1
#: ../src/docs/guides/automation/olivetin.md:1
#, no-wrap
msgid "bash"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/02-using-variables.md:26
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:26
#: ../src/docs/books/learning_bash/05-tests.md:24
#, no-wrap
msgid ":checkered_flag: **linux**, **script**, **bash**, **variable**\n"
msgstr ""

#. type: Title #
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:1
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:12
#, no-wrap
msgid "Bash - Data entry and manipulations"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:15
#, no-wrap
msgid "In this chapter you will learn how to make your scripts interact with users and manipulate the data.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:24
#, no-wrap
msgid ""
":heavy_check_mark: read input from a user;     \n"
":heavy_check_mark: manipulate data entries;     \n"
":heavy_check_mark: use arguments inside a script;     \n"
":heavy_check_mark: manage positional variables;     \n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:28
#, no-wrap
msgid "**Complexity**: :star: :star:  \n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:35
#, no-wrap
msgid "Depending on the purpose of the script, it may be necessary to send it information when it is launched or during its execution. This information, not known when the script is written, can be extracted from files or entered by the user. It is also possible to send this information in the form of arguments when the script command is entered. This is the way many Linux commands work.\n"
msgstr ""

#. type: Title ##
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:36
#, no-wrap
msgid "The `read` command"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:39
#, no-wrap
msgid "The `read` command allows you to enter a character string and store it in a variable.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:41
#, no-wrap
msgid "Syntax of the read command:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:42
#, no-wrap
msgid "read [-n X] [-p] [-s] [variable]\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:47
#, no-wrap
msgid "The first example below, prompts you for two variable inputs: \"name\" and \"firstname\", but since there is no prompt, you would have to know ahead of time that this was the case. In the case of this particular entry, each variable input would be separated by a space.  The second example prompts for the variable \"name\" with the prompt text included:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:48
#, no-wrap
msgid ""
"read name firstname\n"
"read -p \"Please type your name: \" name\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:58
#, no-wrap
msgid ""
"| Option | Observation                                   |\n"
"|--------|-----------------------------------------------|\n"
"| `-p`   | Displays a prompt message.                    |\n"
"| `-n`   | Limit the number of characters to be entered. |\n"
"| `-s`   | Hides the input.                              |\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:60
#, no-wrap
msgid "When using the `-n` option, the shell automatically validates the input after the specified number of characters. The user does not have to press the <kbd>ENTER</kbd> key.\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:61
#, no-wrap
msgid "read -n5 name\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:66
#, no-wrap
msgid "The `read` command allows you to interrupt the execution of the script while the user enters information. The user's input is broken down into words assigned to one or more predefined variables. The words are strings of characters separated by the field separator.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:68
#, no-wrap
msgid "The end of the input is determined by pressing the <kbd>ENTER</kbd> key.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:70
#, no-wrap
msgid "Once the input is validated, each word will be stored in the predefined variable.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:73
#, no-wrap
msgid ""
"The division of the words is defined by the field separator character.\n"
"This separator is stored in the system variable `IFS` (**Internal Field Separator**).\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:74
#, no-wrap
msgid ""
"set | grep IFS\n"
"IFS=$' \\t\\n'\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:80
#, no-wrap
msgid "By default, the IFS contains the space, tab and line feed.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:82
#, no-wrap
msgid "When used without specifying a variable, this command simply pauses the script. The script continues its execution when the input is validated.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:84
#, no-wrap
msgid "This is used to pause a script when debugging or to prompt the user to press <kbd>ENTER</kbd> to continue.\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:85
#, no-wrap
msgid ""
"echo -n \"Press [ENTER] to continue...\"\n"
"read\n"
msgstr ""

#. type: Title ##
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:90
#, no-wrap
msgid "The `cut` command"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:93
#, no-wrap
msgid "The cut command allows you to isolate a column in a file or in a stream.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:95
#, no-wrap
msgid "Syntax of the cut command:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:96
#, no-wrap
msgid "cut [-cx] [-dy] [-fz] file\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:101
#, no-wrap
msgid "Example of use of the cut command:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:102
#, no-wrap
msgid "cut -d: -f1 /etc/passwd\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:111
#, no-wrap
msgid ""
"| Option | Observation                                                      |\n"
"|--------|------------------------------------------------------------------|\n"
"| `-c`   | Specifies the sequence numbers of the characters to be selected. |\n"
"| `-d`   | Specifies the field separator.                                   |\n"
"| `-f`   | Specifies the order number of the columns to select.             |\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:113
#, no-wrap
msgid "The main interest of this command will be its association with a stream, for example the `grep` command and the `|` pipe.\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:116
#, no-wrap
msgid "The `grep` command works \"vertically\" (isolation of one line from all the lines in the file).\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:116
#, no-wrap
msgid "The combination of the two commands allows for the  **isolation of a specific field in the file**.\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:119
#, no-wrap
msgid ""
"grep \"^root:\" /etc/passwd | cut -d: -f3\n"
"0\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:127
#, no-wrap
msgid "    Configuration files with a single structure using the same field separator are ideal targets for this combination of commands.\n"
msgstr ""

#. type: Title ##
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:128
#, no-wrap
msgid "The `tr` command"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:131
#, no-wrap
msgid "The `tr` command allows you to convert a string.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:133
#, no-wrap
msgid "Syntax of the `tr` command:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:134
#, no-wrap
msgid "tr [-csd] string1 string2\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:143
#, no-wrap
msgid ""
"| Option | Observation                                                                                            |\n"
"|--------|--------------------------------------------------------------------------------------------------------|\n"
"| `-c`   | All characters not specified in the first string are converted to the characters of the second string. |\n"
"| `-d`   | Deletes the specified character.                                                                       |\n"
"| `-s`   | Reduce the specified character to a single unit.                                                       |\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:145
#, no-wrap
msgid "An example of using the `tr` command follows. If you use `grep` to return root's `passwd` file entry, you would get this:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:146
#, no-wrap
msgid "grep root /etc/passwd\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:150
#, no-wrap
msgid "returns:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:150
#, no-wrap
msgid "root:x:0:0:root:/root:/bin/bash\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:154
#, no-wrap
msgid "Now let's use `tr` command and the reduce the \"o's\" in the line:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:155
#, no-wrap
msgid "grep root /etc/passwd | tr -s \"o\"\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:159
#, no-wrap
msgid "which returns this:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:159
#, no-wrap
msgid "rot:x:0:0:rot:/rot:/bin/bash\n"
msgstr ""

#. type: Title ##
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:162
#, no-wrap
msgid "Extract the name and path of a file"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:165
#, no-wrap
msgid "The `basename` command allows you to extract the name of the file from a path.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:167
#, no-wrap
msgid "The `dirname` command allows you to extract the parent path of a file.\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:170
#, no-wrap
msgid ""
"echo $FILE=/usr/bin/passwd\n"
"basename $FILE\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:175
#, no-wrap
msgid "Which would result in \"passwd\"\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:175
#, no-wrap
msgid "dirname $FILE\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:179
#, no-wrap
msgid "Which would result in: \"/usr/bin\"\n"
msgstr ""

#. type: Title ##
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:180
#, no-wrap
msgid "Arguments of a script"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:183
#, no-wrap
msgid "The request to enter information with the `read` command interrupts the execution of the script as long as the user does not enter any information.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:186
#, no-wrap
msgid ""
"This method, although very user-friendly, has its limits if the script is scheduled to run at night.\n"
"To overcome this problem, it is possible to inject the desired information via arguments.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:188
#, no-wrap
msgid "Many Linux commands work on this principle.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:190
#, no-wrap
msgid "This way of doing things has the advantage that once the script is executed, it will not need any human intervention to finish.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:192
#, no-wrap
msgid "Its major disadvantage is that the user will have to be warned about the syntax of the script to avoid errors.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:195
#, no-wrap
msgid ""
"The arguments are filled in when the script command is entered.\n"
"They are separated by a space.\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:196
#, no-wrap
msgid "./script argument1 argument2\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:201
#, no-wrap
msgid "Once executed, the script saves the entered arguments in predefined variables: `positional variables`.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:203
#, no-wrap
msgid "These variables can be used in the script like any other variable, except that they cannot be assigned.\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:206
#, no-wrap
msgid "Unused positional variables exist but are empty.\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:206
#, no-wrap
msgid "Positional variables are always defined in the same way:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:214
#, no-wrap
msgid ""
"| Variable     | Observation                                             |\n"
"|--------------|---------------------------------------------------------|\n"
"| `$0`         | contains the name of the script as entered.             |\n"
"| `$1` to `$9` | contain the values of the 1st to 9th argument           |\n"
"| `${x}`       | contains the value of the argument `x`, greater than 9. |\n"
"| `$#`         | contains the number of arguments passed.                |\n"
"| `$*` or `$@` | contains in one variable all the arguments passed.      |\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:217
#, no-wrap
msgid ""
"#!/usr/bin/env bash\n"
"#\n"
"# Author : Damien dit LeDub\n"
"# Date : september 2019\n"
"# Version 1.0.0 : Display the value of the positional arguments\n"
"# From 1 to 3\n"
"\n"
"# The field separator will be \",\" or space\n"
"# Important to see the difference in $* and $@\n"
"IFS=\", \"\n"
"\n"
"# Display a text on the screen:\n"
"echo \"The number of arguments (\\$#) = $#\"\n"
"echo \"The name of the script  (\\$0) = $0\"\n"
"echo \"The 1st argument        (\\$1) = $1\"\n"
"echo \"The 2nd argument        (\\$2) = $2\"\n"
"echo \"The 3rd argument        (\\$3) = $3\"\n"
"echo \"All separated by IFS    (\\$*) = $*\"\n"
"echo \"All without separation  (\\$@) = $@\"\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:240
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:301
#, no-wrap
msgid "This will give:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:241
#, no-wrap
msgid ""
"$ ./arguments.sh one two \"tree four\"\n"
"The number of arguments ($#) = 3\n"
"The name of the script  ($0) = ./arguments.sh\n"
"The 1st argument        ($1) = one\n"
"The 2nd argument        ($2) = two\n"
"The 3rd argument        ($3) = tree four\n"
"All separated by IFS    ($*) = one,two,tree four\n"
"All without separation  ($@) = one two tree four\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:255
#, no-wrap
msgid "    Beware of the difference between `$@` and `$*`. It is in the argument storage format:\n"
msgstr ""

#. type: Bullet: '    * '
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:258
#, no-wrap
msgid "`$*` : Contains the arguments in the format `\"$1 $2 $3 ...\"`\n"
msgstr ""

#. type: Bullet: '    * '
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:258
#, no-wrap
msgid "`$@` : Contains arguments in the format `\"$1\" \"$2\" \"$3\" ...`\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:260
#, no-wrap
msgid "    It is by modifying the `IFS` environment variable that the difference is visible.\n"
msgstr ""

#. type: Title ###
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:261
#, no-wrap
msgid "The shift command"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:264
#, no-wrap
msgid "The shift command allows you to shift positional variables.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:266
#, no-wrap
msgid "Let's modify our previous example to illustrate the impact of the shift command on positional variables:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:267
#, no-wrap
msgid ""
"#!/usr/bin/env bash\n"
"#\n"
"# Author : Damien dit LeDub\n"
"# Date : september 2019\n"
"# Version 1.0.0 : Display the value of the positional arguments\n"
"# From 1 to 3\n"
"\n"
"# The field separator will be \",\" or space\n"
"# Important to see the difference in $* and $@\n"
"IFS=\", \"\n"
"\n"
"# Display a text on the screen:\n"
"echo \"The number of arguments (\\$#) = $#\"\n"
"echo \"The 1st argument        (\\$1) = $1\"\n"
"echo \"The 2nd argument        (\\$2) = $2\"\n"
"echo \"The 3rd argument        (\\$3) = $3\"\n"
"echo \"All separated by IFS    (\\$*) = $*\"\n"
"echo \"All without separation  (\\$@) = $@\"\n"
"\n"
"shift 2\n"
"echo \"\"\n"
"echo \"-------- SHIFT 2 ----------------\"\n"
"echo \"\"\n"
"\n"
"echo \"The number of arguments (\\$#) = $#\"\n"
"echo \"The 1st argument        (\\$1) = $1\"\n"
"echo \"The 2nd argument        (\\$2) = $2\"\n"
"echo \"The 3rd argument        (\\$3) = $3\"\n"
"echo \"All separated by IFS    (\\$*) = $*\"\n"
"echo \"All without separation  (\\$@) = $@\"\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:302
#, no-wrap
msgid ""
"./arguments.sh one two \"tree four\"\n"
"The number of arguments ($#) = 3\n"
"The 1st argument        ($1) = one\n"
"The 2nd argument        ($2) = two\n"
"The 3rd argument        ($3) = tree four\n"
"All separated by IFS    ($*) = one,two,tree four\n"
"All without separation  ($@) = one two tree four\n"
"\n"
"-------- SHIFT 2 ----------------\n"
"\n"
"The number of arguments ($#) = 1\n"
"The 1st argument        ($1) = tree four\n"
"The 2nd argument        ($2) =\n"
"The 3rd argument        ($3) =\n"
"All separated by IFS    ($*) = tree four\n"
"All without separation  ($@) = tree four\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:322
#, no-wrap
msgid "As you can see, the `shift` command has shifted the place of the arguments \"to the left\", removing the first 2.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:324
#: ../src/docs/gemstones/markdown-demo-v2.md:15
#: ../src/docs/guides/security/pam.md:45
#: ../src/docs/labs/security/lab9-cryptography.md:155
#, no-wrap
msgid "!!! WARNING\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:326
#, no-wrap
msgid "    When using the `shift` command, the `$#` and `$*` variables are modified accordingly.\n"
msgstr ""

#. type: Title ###
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:327
#, no-wrap
msgid "The `set` command"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:330
#, no-wrap
msgid "The `set` command splits a string into positional variables.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:332
#, no-wrap
msgid "Syntax of the set command:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:333
#, no-wrap
msgid "set [value] [$variable]\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:339
#, no-wrap
msgid ""
"$ set one two three\n"
"$ echo $1 $2 $3 $#\n"
"one two three 3\n"
"$ variable=\"four five six\"\n"
"$ set $variable\n"
"$ echo $1 $2 $3 $#\n"
"four five six 3\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:349
#, no-wrap
msgid "You can now use positional variables as seen before.\n"
msgstr ""
