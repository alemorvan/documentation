# Italian translations for po package
# Traduzioni italiane per il pacchetto po.
# Copyright (C) 2023 Free Software Foundation, Inc.
# This file is distributed under the same license as the po package.
# Automatically generated, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: po 4a\n"
"POT-Creation-Date: 2023-06-16 15:40+0000\n"
"PO-Revision-Date: 2023-06-16 15:06+0000\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#. type: Title #
#: ../src/docs/books/disa_stig/disa_stig_part2.md:13
#: ../src/docs/books/disa_stig/disa_stig_part1.md:23
#: ../src/docs/books/learning_ansible/05-deployments.md:31
#: ../src/docs/books/learning_bash/appendix/02-variables-logs.md:14
#: ../src/docs/books/lxd_server/00-toc.md:1
#: ../src/docs/books/lxd_server/00-toc.md:13
#: ../src/docs/books/nvchad/index.md:12
#: ../src/docs/books/nvchad/plugins/index.md:14
#: ../src/docs/books/nvchad/plugins/md_preview.md:14
#: ../src/docs/books/nvchad/plugins/projectmgr.md:14
#: ../src/docs/books/nvchad/vale_nvchad.md:12
#: ../src/docs/gemstones/dnf-swap.md:18 ../src/docs/gemstones/docker.md:10
#: ../src/docs/gemstones/nmtui.md:8 ../src/docs/gemstones/setup_local_repo.md:8
#: ../src/docs/gemstones/string_color.md:11
#: ../src/docs/guides/automation/cron_jobs_howto.md:25
#: ../src/docs/guides/automation/olivetin.md:14
#: ../src/docs/guides/automation/templates-automation-packer-vsphere.md:25
#: ../src/docs/guides/backup/mirroring_lsyncd.md:26
#: ../src/docs/guides/backup/rsnapshot_backup.md:22
#: ../src/docs/guides/backup/rsync_ssh.md:24
#: ../src/docs/guides/cms/cloud_server_using_nextcloud.md:28
#: ../src/docs/guides/cms/dokuwiki_server.md:23
#: ../src/docs/guides/containers/lxd_web_servers.md:10
#: ../src/docs/guides/containers/podman-nextcloud.md:13
#: ../src/docs/guides/contribute/local_docs.md:11
#: ../src/docs/guides/contribute/mkdocs_lsyncd.md:11
#: ../src/docs/guides/contribute/mkdocs_venv.md:14
#: ../src/docs/guides/contribute/style_guide.md:14
#: ../src/docs/guides/database/database_mariadb-server.md:21
#: ../src/docs/guides/desktop/kde_installation.md:11
#: ../src/docs/guides/dns/private_dns_server_using_bind.md:22
#: ../src/docs/guides/editors/micro.md:14
#: ../src/docs/guides/email/postfix_reporting.md:22
#: ../src/docs/guides/file_sharing/glusterfs.md:16
#: ../src/docs/guides/file_sharing/secure_ftp_server_vsftpd.md:21
#: ../src/docs/guides/file_sharing/sftp.md:16
#: ../src/docs/guides/migrate2rocky.md:18
#: ../src/docs/guides/network/basic_network_configuration.md:12
#: ../src/docs/guides/network/librenms_monitoring_server.md:13
#: ../src/docs/guides/package_management/index.md:1
#: ../src/docs/guides/package_management/index.md:5
#: ../src/docs/guides/proxies/haproxy_apache_lxd.md:9
#: ../src/docs/guides/proxies/pound.md:17
#: ../src/docs/guides/security/authentication/active_directory_authentication.md:13
#: ../src/docs/guides/security/enabling_iptables_firewall.md:22
#: ../src/docs/guides/security/firewalld-beginners.md:10
#: ../src/docs/guides/security/generating_ssl_keys_lets_encrypt.md:23
#: ../src/docs/guides/security/ssh_public_private_keys.md:21
#: ../src/docs/guides/security/ssl_keys_https.md:22
#: ../src/docs/guides/virtualization/vbox-rocky.md:13
#: ../src/docs/guides/web/apache-sites-enabled.md:25
#: ../src/docs/guides/web/apache_hardened_webserver/index.md:23
#: ../src/docs/guides/web/apache_hardened_webserver/modsecurity.md:24
#: ../src/docs/guides/web/apache_hardened_webserver/ossec-hids.md:22
#: ../src/docs/guides/web/apache_hardened_webserver/rkhunter.md:23
#: ../src/docs/guides/web/nginx-mainline.md:13
#: ../src/docs/guides/web/nginx-multisite.md:14
#: ../src/docs/labs/security/introduction.md:1
#: ../src/docs/labs/security/introduction.md:5
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Yaml Front Matter Hash Value: contributors
#: ../src/docs/books/lxd_server/00-toc.md:1
#: ../src/docs/books/lxd_server/01-install.md:1
#: ../src/docs/books/lxd_server/02-zfs_setup.md:1
#: ../src/docs/books/lxd_server/03-lxdinit.md:1
#: ../src/docs/books/lxd_server/04-firewall.md:1
#: ../src/docs/books/lxd_server/05-lxd_images.md:1
#: ../src/docs/books/lxd_server/06-profiles.md:1
#: ../src/docs/books/lxd_server/07-configurations.md:1
#: ../src/docs/books/lxd_server/08-snapshots.md:1
#: ../src/docs/books/lxd_server/09-snapshot_server.md:1
#: ../src/docs/books/lxd_server/10-automating.md:1
#: ../src/docs/gemstones/bash_stub.md:1
#: ../src/docs/guides/automation/cron_jobs_howto.md:1
#: ../src/docs/guides/backup/rsnapshot_backup.md:1
#: ../src/docs/guides/cms/cloud_server_using_nextcloud.md:1
#: ../src/docs/guides/cms/dokuwiki_server.md:1
#: ../src/docs/guides/contribute/mkdocs_lsyncd.md:1
#: ../src/docs/guides/contribute/navigation.md:1
#: ../src/docs/guides/desktop/kde_installation.md:1
#: ../src/docs/guides/dns/private_dns_server_using_bind.md:1
#: ../src/docs/guides/email/postfix_reporting.md:1
#: ../src/docs/guides/file_sharing/secure_ftp_server_vsftpd.md:1
#: ../src/docs/guides/file_sharing/sftp.md:1
#: ../src/docs/guides/network/librenms_monitoring_server.md:1
#: ../src/docs/guides/security/enabling_iptables_firewall.md:1
#: ../src/docs/guides/security/ssh_public_private_keys.md:1
#: ../src/docs/guides/security/ssl_keys_https.md:1
#: ../src/docs/guides/web/apache-sites-enabled.md:1
#: ../src/docs/guides/web/apache_hardened_webserver/index.md:1
#: ../src/docs/guides/web/apache_hardened_webserver/modsecurity.md:1
#: ../src/docs/guides/web/apache_hardened_webserver/ossec-hids.md:1
#: ../src/docs/guides/web/apache_hardened_webserver/rkhunter.md:1
#, no-wrap
msgid "Ezequiel Bruni"
msgstr ""

#. type: Title ###
#: ../src/docs/books/nvchad/nerd_fonts.md:52
#: ../src/docs/guides/contribute/mkdocs_lsyncd.md:256
#: ../src/docs/guides/dns/private_dns_server_using_bind.md:58
#: ../src/docs/guides/security/dnf_automatic.md:34
#: ../src/docs/guides/web/apache-sites-enabled.md:58
#: ../src/docs/guides/web/php.md:105 ../src/docs/guides/web/php.md:168
#, no-wrap
msgid "Configuration"
msgstr ""

#. type: Yaml Front Matter Array Element: tags
#: ../src/docs/guides/automation/olivetin.md:1
#: ../src/docs/guides/file_sharing/sftp.md:1
#: ../src/docs/guides/web/apache-sites-enabled.md:1
#: ../src/docs/guides/web/apache_hardened_webserver/index.md:1
#: ../src/docs/guides/web/apache_hardened_webserver/modsecurity.md:1
#: ../src/docs/guides/web/apache_hardened_webserver/ossec-hids.md:1
#: ../src/docs/guides/web/nginx-mainline.md:1
#: ../src/docs/guides/web/nginx-multisite.md:1 ../src/docs/guides/web/php.md:1
#, no-wrap
msgid "web"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/backup/rsnapshot_backup.md:129
#: ../src/docs/guides/web/apache-sites-enabled.md:20
#: ../src/docs/guides/web/nginx-multisite.md:42
#: ../src/docs/labs/sys_admin_1/lab7-software_management.md:485
#: ../src/docs/labs/sys_admin_1/lab7-software_management.md:718
#, no-wrap
msgid "    !!! tip\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/dns/private_dns_server_using_bind.md:21
#: ../src/docs/guides/web/apache-sites-enabled.md:18
#, no-wrap
msgid "A server running Rocky Linux\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/file_sharing/sftp.md:110
#: ../src/docs/guides/proxies/pound.md:186
#: ../src/docs/guides/web/apache-sites-enabled.md:62
#, no-wrap
msgid "vi /etc/httpd/conf/httpd.conf\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/file_sharing/sftp.md:115
#: ../src/docs/guides/web/apache-sites-enabled.md:68
#, no-wrap
msgid "Include /etc/httpd/sites-enabled\n"
msgstr ""

#. type: Yaml Front Matter Array Element: tags
#: ../src/docs/guides/web/apache-sites-enabled.md:1
#: ../src/docs/guides/web/apache_hardened_webserver/index.md:1
#: ../src/docs/guides/web/apache_hardened_webserver/modsecurity.md:1
#, no-wrap
msgid "apache"
msgstr ""

#. type: Yaml Front Matter Array Element: tags
#: ../src/docs/guides/web/apache-sites-enabled.md:1
#, no-wrap
msgid "multiple site"
msgstr ""

#. type: Yaml Front Matter Hash Value: title
#: ../src/docs/guides/web/apache-sites-enabled.md:1
#, no-wrap
msgid "Apache Multiple Site"
msgstr ""

#. type: Title #
#: ../src/docs/guides/web/apache-sites-enabled.md:12
#, no-wrap
msgid "Apache web server multiple site setup"
msgstr ""

#. type: Title ##
#: ../src/docs/guides/web/apache-sites-enabled.md:14
#, no-wrap
msgid "What you need"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/web/apache-sites-enabled.md:18
#, no-wrap
msgid "Knowledge of the command-line and text editors. This example uses *vi*, but feel free to use your favorite editor.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:22
#, no-wrap
msgid "        If you'd like to learn about the vi text editor, [here's a handy tutorial](https://www.tutorialspoint.com/unix/unix-vi-editor.htm).\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/web/apache-sites-enabled.md:24
#, no-wrap
msgid "Basic knowledge about installing and running web services\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:28
#, no-wrap
msgid "Rocky Linux has many ways for you to set up a website. This is just one method, using Apache on a single server. The design of this method is for multiple servers on one piece of hardware, but it can also act as a base configuration for a single site server as well.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:30
#, no-wrap
msgid "Historical fact: This server setup appears to have started with Debian-based systems, but it is perfectly adaptable to any Linux operating system running Apache.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:32
#, no-wrap
msgid "For those looking for a similar setup for Nginx, [examine this guide](nginx-multisite.md).\n"
msgstr ""

#. type: Title ##
#: ../src/docs/guides/web/apache-sites-enabled.md:33
#, no-wrap
msgid "Install Apache"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:35
#, no-wrap
msgid "You will likely need other packages for your website, such as PHP, database, or other packages. Installing PHP along with `http` will get you the most recent version from the Rocky Linux repositories.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:37
#, no-wrap
msgid "Just remember that you may need modules, such as `php-bcmath` or `php-mysqlind`. Your web application specifications will dictate what you need. You can install these when needed. For now, you will install `http` and PHP, as those are almost a forgone conclusion:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:39
#, no-wrap
msgid "From the command-line run:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/web/apache-sites-enabled.md:40
#, no-wrap
msgid "dnf install httpd php\n"
msgstr ""

#. type: Title ##
#: ../src/docs/guides/web/apache-sites-enabled.md:44
#, no-wrap
msgid "Add extra directories"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:47
#, no-wrap
msgid "This method uses a couple of additional directories, but they do not currently exist on the system. You need to add two directories in */etc/httpd/* called \"sites-available\" and \"sites-enabled.\"\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:49
#, no-wrap
msgid "From the command-line enter: \n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/web/apache-sites-enabled.md:50
#, no-wrap
msgid "mkdir -p /etc/httpd/sites-available /etc/httpd/sites-enabled\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:55
#, no-wrap
msgid "This will create both needed directories.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:57
#, no-wrap
msgid "You also need a directory where our sites are going to be. This can be anywhere, but a good way to keep things organized is to create a directory called \"sub-domains\". To decrease complexity, put this in /var/www: `mkdir /var/www/sub-domains/`.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:61
#, no-wrap
msgid "You also need to add a line to the bottom of the `httpd.conf` file. To do this, enter: \n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:67
#, no-wrap
msgid "and go to the bottom of the file and add:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:73
#, no-wrap
msgid "Our actual configuration files will be in */etc/httpd/sites-available* and you will symlink to them in */etc/httpd/sites-enabled*.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:75
#, no-wrap
msgid "**Why do you do this?**\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:77
#, no-wrap
msgid "Say you have 10 websites all running on the same server on different IP addresses. Say that site B has some major updates, and you have to make changes to the configuration for that site. Say also that something goes wrong with the changes made, and when you restart `httpd` to read in the changes, `httpd` does not start. Not only will the site you were working on not start, but neither will the rest of them. With this method, you can remove the symbolic link for the site that caused the problem, and restart `httpd`. It will start working again, and you can go to work fixing the broken site configuration.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:79
#, no-wrap
msgid "It sure takes the pressure off, knowing that the telephone is not going to ring with some upset customer or boss, because a service is off-line.\n"
msgstr ""

#. type: Title ###
#: ../src/docs/guides/web/apache-sites-enabled.md:80
#, no-wrap
msgid "The site configuration"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:83
#, no-wrap
msgid "The other benefit of this method is that it allows us to fully specify everything outside the default `httpd.conf` file. The default `httpd.conf` file loads the defaults, and your site configurations do everything else. Great, right? Plus again, it makes troubleshooting a broken site configuration less complex.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:85
#, no-wrap
msgid "Say you have a website that loads a wiki. You will need a configuration file, which makes the site available on port 80.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:87
#, no-wrap
msgid "If you want to serve the website with SSL/TLS (and face it, in most cases you do), you need to add another (nearly the same) section to that file to enable port 443.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:89
#, no-wrap
msgid "You can examine that below in the [Configuration `https` using An SSL/TLS certificate](#https) section.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:91
#, no-wrap
msgid "You first need to create this configuration file in *sites-available*: \n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/web/apache-sites-enabled.md:92
#, no-wrap
msgid "vi /etc/httpd/sites-available/com.wiki.www\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:97
#, no-wrap
msgid "The configuration file content will look something like this:\n"
msgstr ""

#. type: Fenced code block (apache)
#: ../src/docs/guides/web/apache-sites-enabled.md:98
#, no-wrap
msgid ""
"<VirtualHost *:80>\n"
"        ServerName your-server-hostname\n"
"        ServerAdmin username@rockylinux.org\n"
"        DocumentRoot /var/www/sub-domains/your-server-hostname/html\n"
"        DirectoryIndex index.php index.htm index.html\n"
"        Alias /icons/ /var/www/icons/\n"
"        # ScriptAlias /cgi-bin/ /var/www/sub-domains/your-server-hostname/cgi-bin/\n"
"\n"
"\tCustomLog \"/var/log/httpd/your-server-hostname-access_log\" combined\n"
"\tErrorLog  \"/var/log/httpd/your-server-hostname-error_log\"\n"
"\n"
"        <Directory /var/www/sub-domains/your-server-hostname/html>\n"
"                Options -ExecCGI -Indexes\n"
"                AllowOverride None\n"
"\n"
"                Order deny,allow\n"
"                Deny from all\n"
"                Allow from all\n"
"\n"
"                Satisfy all\n"
"        </Directory>\n"
"</VirtualHost>\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:123
#, no-wrap
msgid "When created, you need to write (save) it with <kbd>shift</kbd>+<kbd>:</kbd>+<kbd>wq</kbd>.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:125
#, no-wrap
msgid "In the example, loading the wiki site happens from the \"html\" subdirectory of _your-server-hostname_, which means that the path you created in _/var/www_ (above) will need some additional directories to satisfy this:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/web/apache-sites-enabled.md:126
#, no-wrap
msgid "mkdir -p /var/www/sub-domains/your-server-hostname/html\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:131
#, no-wrap
msgid "This will create the entire path with a single command. Next you want to install your files to this directory that will actually run the website. This might be something you made yourself, or an installable web application (in this case a wiki) that you downloaded.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:133
#, no-wrap
msgid "Copy your files to the path you created:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/web/apache-sites-enabled.md:134
#, no-wrap
msgid "cp -Rf wiki_source/* /var/www/sub-domains/your-server-hostname/html/\n"
msgstr ""

#. type: Title ##
#: ../src/docs/guides/web/apache-sites-enabled.md:138
#, no-wrap
msgid "<a name=\"https\"></a>Configuration `https` using an SSL/TLS certificate"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:141
#, no-wrap
msgid "As stated earlier, every web server created these days _should_ be running with SSL/TLS (the secure socket layer).\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:143
#, no-wrap
msgid "This process starts by generating a private key and a CSR (which stands for certificate signing request) and submitting the CSR to the certificate authority to buy the SSL/TLS certificate. The process of generating these keys is somewhat extensive.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:145
#, no-wrap
msgid "If you are not familiar with SSL/TLS key generation examine: [Generating SSL Keys](../security/ssl_keys_https.md)\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:147
#, no-wrap
msgid "You can also use this alternate process, using an [SSL certificate from Let's Encrypt](../security/generating_ssl_keys_lets_encrypt.md)\n"
msgstr ""

#. type: Title ###
#: ../src/docs/guides/web/apache-sites-enabled.md:148
#, no-wrap
msgid "Placement of the SSL/TLS keys and certificates"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:151
#, no-wrap
msgid "Since you have your keys and certificate files, you need to place them logically in your file system on the web server. As you have seen with the example configuration file, you are placing your web files in _/var/www/sub-domains/your-server-hostname/html_.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:153
#, no-wrap
msgid "You want to place your certificate and key files with the domain, but outside of the document root, which in this case is the _html_ folder.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:155
#, no-wrap
msgid "You never want to risk exposing your certificates and keys to the web. That would be bad!\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:157
#, no-wrap
msgid "Instead, you will create a directory structure for our SSL/TLS files, outside the document root:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/web/apache-sites-enabled.md:158
#, no-wrap
msgid "mkdir -p /var/www/sub-domains/your-server-hostname/ssl/{ssl.key,ssl.crt,ssl.csr}`\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:163
#, no-wrap
msgid "If you are new to the \"tree\" syntax for making directories, what the above says is:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:165
#, no-wrap
msgid "\"Make a directory called \"ssl\" and make three directories inside called ssl.key, ssl.crt, and ssl.csr.\"\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:167
#, no-wrap
msgid "Just a note ahead of time: Storing the certificate signing request (CSR) file in the tree is not necessary, but it simplifies some things. If you ever need to re-issue the certificate from a different provider, it is a good idea to have a stored copy of the CSR file. The question becomes where can you store it so that you will remember, and storing it within the tree of your website is logical.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:169
#, no-wrap
msgid "Assuming that you have named your key, csr, and crt (certificate) files with the name of your site, and that you have them stored in _/root_, you will copy them up to their locations:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/web/apache-sites-enabled.md:170
#, no-wrap
msgid ""
"cp /root/com.wiki.www.key /var/www/sub-domains/your-server-hostname/ssl/ssl.key/\n"
"cp /root/com.wiki.www.csr /var/www/sub-domains/your-server-hostname/ssl/ssl.csr/\n"
"cp /root/com.wiki.www.crt /var/www/sub-domains/your-server-hostname/ssl/ssl.crt/\n"
msgstr ""

#. type: Title ###
#: ../src/docs/guides/web/apache-sites-enabled.md:176
#, no-wrap
msgid "The site configuration - `https`"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:179
#, no-wrap
msgid "Once you have generated your keys and purchased the SSL/TLS certificate, you can now move forward with the configuration of the website, using your keys.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:181
#, no-wrap
msgid "For starters, break down the beginning of the configuration file. For instance, even though you still want to listen on port 80 (standard `http` port) for incoming requests, you do not want any of those requests to actually go to port 80.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:183
#, no-wrap
msgid "You want them to go to port 443 (or \"`http` secure\", better known as SSL/TLS or `https`). Our port 80 configuration section will be minimal:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/web/apache-sites-enabled.md:185
#, no-wrap
msgid ""
"<VirtualHost *:80>\n"
"        ServerName your-server-hostname\n"
"        ServerAdmin username@rockylinux.org\n"
"        Redirect / https://your-server-hostname/\n"
"</VirtualHost>\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:194
#, no-wrap
msgid "What this says is to send any regular web request to the `https` configuration instead. The apache \"Redirect\" option shown is temporary. When testing is complete and you can see that the site is running as expected, you can change this to \"Redirect permanent.\"\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:196
#, no-wrap
msgid "A permanent redirect will teach the search engines, and soon any traffic to your site that comes from search engines will go only to port 443 (`https`) without hitting port 80 (`http`) first.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:198
#, no-wrap
msgid "Next, you need to define the `https` part of the configuration file:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/web/apache-sites-enabled.md:199
#, no-wrap
msgid ""
"<VirtualHost *:80>\n"
"        ServerName your-server-hostname\n"
"        ServerAdmin username@rockylinux.org\n"
"        Redirect / https://your-server-hostname/\n"
"</VirtualHost>\n"
"<Virtual Host *:443>\n"
"        ServerName your-server-hostname\n"
"        ServerAdmin username@rockylinux.org\n"
"        DocumentRoot /var/www/sub-domains/your-server-hostname/html\n"
"        DirectoryIndex index.php index.htm index.html\n"
"        Alias /icons/ /var/www/icons/\n"
"        # ScriptAlias /cgi-bin/ /var/www/sub-domains/your-server-hostname/cgi-bin/\n"
"\n"
"\tCustomLog \"/var/log/`http`d/your-server-hostname-access_log\" combined\n"
"\tErrorLog  \"/var/log/`http`d/your-server-hostname-error_log\"\n"
"\n"
"        SSLEngine on\n"
"        SSLProtocol all -SSLv2 -SSLv3 -TLSv1\n"
"        SSLHonorCipherOrder on\n"
"        SSLCipherSuite EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384\n"
":EECDH+aRSA+SHA256:EECDH+aRSA+RC4:EECDH:EDH+aRSA:RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS\n"
"\n"
"        SSLCertificateFile /var/www/sub-domains/your-server-hostname/ssl/ssl.crt/com.wiki.www.crt\n"
"        SSLCertificateKeyFile /var/www/sub-domains/your-server-hostname/ssl/ssl.key/com.wiki.www.key\n"
"        SSLCertificateChainFile /var/www/sub-domains/your-server-hostname/ssl/ssl.crt/your_providers_intermediate_certificate.crt\n"
"\n"
"        <Directory /var/www/sub-domains/your-server-hostname/html>\n"
"                Options -ExecCGI -Indexes\n"
"                AllowOverride None\n"
"\n"
"                Order deny,allow\n"
"                Deny from all\n"
"                Allow from all\n"
"\n"
"                Satisfy all\n"
"        </Directory>\n"
"</VirtualHost>\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:240
#, no-wrap
msgid "So, breaking down this configuration further, after the normal portions of the configuration and down to the SSL/TLS section:\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/web/apache-sites-enabled.md:247
#, no-wrap
msgid "SSLEngine on - says to use SSL/TLS\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/web/apache-sites-enabled.md:247
#, no-wrap
msgid "SSLProtocol all -SSLv2 -SSLv3 -TLSv1 - says to use all available protocols, except those with vulnerabilities. You should research periodically the protocols currently acceptable for use.\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/web/apache-sites-enabled.md:247
#, no-wrap
msgid "SSLHonorCipherOrder on - this deals with the next line regarding the cipher suites, and says to deal with them in the order shown. This is another area where reviewing the cipher suites should occur periodically.\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/web/apache-sites-enabled.md:247
#, no-wrap
msgid "SSLCertificateFile - is exactly what it says: the newly purchased and applied certificate file and its location\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/web/apache-sites-enabled.md:247
#, no-wrap
msgid "SSLCertificateKeyFile - the key you generated when creating your certificate signing request\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/web/apache-sites-enabled.md:247
#, no-wrap
msgid "SSLCertificateChainFile - the certificate from your certificate provider, often called the intermediate certificate\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:249
#, no-wrap
msgid "Next, take everything live and if there are no errors starting the web service and if going to your website reveals `https` without errors, you are ready to go.\n"
msgstr ""

#. type: Title ##
#: ../src/docs/guides/web/apache-sites-enabled.md:250
#, no-wrap
msgid "Taking it live"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:253
#, no-wrap
msgid "Remember that our *httpd.conf* file is including */etc/httpd/sites-enabled* at the end of the file. When `httpd` restarts, it will load whatever configuration files are in that *sites-enabled* directory. Thing is, all of our configuration files are in *sites-available*.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:255
#, no-wrap
msgid "That is by design, so that you can remove things when or if  `httpd` fails to restart. To enable our configuration file, you need to create a symbolic link to that file in *sites-enabled* and start or restart the web service. To do this, you use this command:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/web/apache-sites-enabled.md:256
#, no-wrap
msgid "ln -s /etc/httpd/sites-available/your-server-hostname /etc/httpd/sites-enabled/\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:262
#, no-wrap
msgid "This will create the link to the configuration file in *sites-enabled*, just like we want.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/web/apache-sites-enabled.md:263
#, no-wrap
msgid "Now just start `httpd` with `systemctl start httpd`. Or restart it if it is already running: `systemctl restart httpd`, and assuming the web service restarts, you can now go and do some testing on your site.\n"
msgstr ""
