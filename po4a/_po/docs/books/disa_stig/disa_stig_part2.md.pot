# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-06-11 15:28+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: tags
#: ../src/docs/books/disa_stig/disa_stig_part2.md:1
#, no-wrap
msgid "DISA"
msgstr ""

#. type: YAML Front Matter: tags
#: ../src/docs/books/disa_stig/disa_stig_part2.md:1
#, no-wrap
msgid "STIG"
msgstr ""

#. type: YAML Front Matter: tags
#: ../src/docs/books/disa_stig/disa_stig_part2.md:1
#, no-wrap
msgid "security"
msgstr ""

#. type: YAML Front Matter: tags
#: ../src/docs/books/disa_stig/disa_stig_part2.md:1
#, no-wrap
msgid "enterprise"
msgstr ""

#. type: YAML Front Matter: title
#: ../src/docs/books/disa_stig/disa_stig_part2.md:1
#, no-wrap
msgid "Verifying DISA STIG Compliance with OpenSCAP - Part 2"
msgstr ""

#. type: Title #
#: ../src/docs/books/disa_stig/disa_stig_part2.md:13
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:16
msgid ""
"In the last article we set up a new rocky linux 8 system with the DISA stig "
"applied using [OpenSCAP](https://www.openscap.org). Now weâre going to cover "
"how to test the system using those same tools, and look at what kinds of "
"reports we can generate using the tools oscap, and its UI counterpart SCAP "
"Workbench."
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:18
msgid ""
"Rocky Linux 8 (and 9!) includes a suite of [SCAP](https://csrc.nist.gov/"
"projects/security-content-automation-protocol) content to test, and "
"remediate compliance against various standards. If you built a STIGâd system "
"in part 1, youâve already seen this in action. The anaconda installer "
"leveraged this content to modify the rocky 8 configuration to implement "
"various controls, install/remove packages, and change the way the OS level "
"mount points work."
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:20
msgid ""
"Over time, these things could change and you will want to keep an eye on it. "
"Frequently, I also use these reports to show proof that a particular control "
"has been implemented correctly. Either way, its baked in to Rocky. We will "
"begin with some basics."
msgstr ""

#. type: Title ##
#: ../src/docs/books/disa_stig/disa_stig_part2.md:21
#, no-wrap
msgid "List Security Profiles"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:24
msgid ""
"To list the security profiles available, we need to use the command `oscap "
"info` provided by the `openscap-scanner` package. This should already be "
"installed in your system if you've been following along since Part 1.  To "
"obtain the security profiles available:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/disa_stig/disa_stig_part2.md:25
#, no-wrap
msgid "oscap info /usr/share/xml/scap/ssg/content/ssg-rl8-ds.xml\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:30
msgid "!!! note"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:32
#, no-wrap
msgid "    Rocky linux 8 content will use the tag ârl8â in the filename. In Rocky 9, it will be ârl9â.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:34
msgid ""
"If all goes well, you should receive a screen that looks something like this "
"one:"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:36
msgid "![Security Profiles](images/disa_stig_pt2_img1.jpg)"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:38
msgid ""
"DISA is just one of many Security Profiles supported by the Rocky Linux SCAP "
"definitions. We also have profiles for:"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/disa_stig/disa_stig_part2.md:45
msgid "[ANSSI](https://www.ssi.gouv.fr/en/)"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/disa_stig/disa_stig_part2.md:45
msgid "[CIS](https://cisecurity.org)"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/disa_stig/disa_stig_part2.md:45
msgid "[Australian Cyber Security Center](https://cyber.gov.au)"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/disa_stig/disa_stig_part2.md:45
msgid ""
"[NIST-800-171](https://csrc.nist.gov/publications/detail/sp/800-171/rev-2/"
"final)"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/disa_stig/disa_stig_part2.md:45
msgid ""
"[HIPAA](https://www.hhs.gov/hipaa/for-professionals/security/laws-"
"regulations/index.html)"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/disa_stig/disa_stig_part2.md:45
msgid "[PCI-DSS](https://www.pcisecuritystandards.org/)"
msgstr ""

#. type: Title ##
#: ../src/docs/books/disa_stig/disa_stig_part2.md:46
#, no-wrap
msgid "Auditing DISA STIG compliance"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:49
msgid "There are two types to choose from here:"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/disa_stig/disa_stig_part2.md:52
msgid "stig - Without a GUI"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/disa_stig/disa_stig_part2.md:52
msgid "stig_gui - With a GUI"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:54
msgid "Run a scan and create an HTML report for the DISA STIG:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/disa_stig/disa_stig_part2.md:55
#, no-wrap
msgid "sudo oscap xccdf eval --report unit-test-disa-scan.html --profile stig /usr/share/xml/scap/ssg/content/ssg-rl8-ds.xml\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:60
msgid "This will result in a report like this:"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:62
msgid "![Scan Results](images/disa_stig_pt2_img2.jpg)"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:64
msgid "And will output an HTML report:"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:66
msgid "![HTML Report](images/disa_stig_pt2_img3.jpg)"
msgstr ""

#. type: Title ##
#: ../src/docs/books/disa_stig/disa_stig_part2.md:67
#, no-wrap
msgid "Generating Remediation Bash Scripts"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:70
msgid ""
"Next, we will generate a scan, and then use the results of the scan to "
"generate a bash script to remediate the system based on the DISA stig "
"profile. I do not recommend using automatic remediation, you should always "
"review the changes before actually running them."
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:79
#, no-wrap
msgid ""
"1) Generate a scan on the system:\n"
"    ```\n"
"    sudo oscap xccdf eval --results disa-stig-scan.xml --profile stig /usr/share/xml/scap/ssg/content/ssg-rl8-ds.xml\n"
"    ```\n"
"2) Use this scan output to generate the script:\n"
"    ```\n"
"\tsudo oscap xccdf generate fix --output draft-disa-remediate.sh --profile stig disa-stig-scan.xml\n"
"    ```\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:81
msgid ""
"The resulting script will include all the changes it would make the system."
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:83
#: ../src/docs/books/disa_stig/disa_stig_part2.md:102
msgid "!!! warning"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:85
#, no-wrap
msgid "    Review this before running it! It will make significant changes to the system. \n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:87
msgid "![Script Contents](images/disa_stig_pt2_img4.jpg)"
msgstr ""

#. type: Title ##
#: ../src/docs/books/disa_stig/disa_stig_part2.md:88
#, no-wrap
msgid "Generating Remediation Ansible Playbooks"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:91
msgid ""
"You can also generate remediation actions in ansible playbook format. Let's "
"repeat the section above, but this time with ansible output:"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:100
#, no-wrap
msgid ""
"1) Generate a scan on the system:\n"
"    ```\n"
"\tsudo oscap xccdf eval --results disa-stig-scan.xml --profile stig /usr/share/xml/scap/ssg/content/ssg-rl8-ds.xml\n"
"    ```\n"
"2) Use this scan output to generate the script:\n"
"    ```\n"
"\tsudo oscap xccdf generate fix --fix-type ansible --output draft-disa-remediate.yml --profile stig disa-stig-scan.xml\n"
"    ```\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:104
#, no-wrap
msgid "    Again, review this before running it! Do you sense a pattern here? This verification step on all of these procedures is very important!\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:106
msgid "![Ansible Playbook](images/disa_stig_pt2_img5.jpg)"
msgstr ""

#. type: Title ##
#: ../src/docs/books/disa_stig/disa_stig_part2.md:107
#, no-wrap
msgid "About The Author"
msgstr ""

#. type: Plain text
#: ../src/docs/books/disa_stig/disa_stig_part2.md:112
msgid ""
"Scott Shinn is the CTO for Atomicorp, and part of the Rocky Linux Security "
"team. He has been involved with federal information systems at the White "
"House, Department of Defense, and Intelligence Community since 1995. Part of "
"that was creating STIGâs and the requirement that you use them and I am so "
"very sorry about that."
msgstr ""
