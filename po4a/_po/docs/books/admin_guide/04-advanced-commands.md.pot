# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-06-11 15:28+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: ../src/docs/books/admin_guide/04-advanced-commands.md:1
#, no-wrap
msgid "Advanced Linux Commands"
msgstr ""

#. type: Title #
#: ../src/docs/books/admin_guide/04-advanced-commands.md:5
#, no-wrap
msgid "Advanced Commands for Linux users"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:8
msgid ""
"Advanced commands provide greater customization and controls in more "
"specialized situations once you become familiar with basic commands."
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:12
#, no-wrap
msgid "**Objectives**: In this chapter, future Linux administrators will learn:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:15
#, no-wrap
msgid ""
":heavy_check_mark: some useful commands not covered in the previous chapter.   \n"
":heavy_check_mark: some advanced commands.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:17
msgid ":checkered_flag: **user commands**, **Linux**"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:20
#, no-wrap
msgid ""
"**Knowledge**: :star:   \n"
"**Complexity**: :star: :star: :star:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:22
#, no-wrap
msgid "**Reading time**: 20 minutes\n"
msgstr ""

#. type: Title ##
#: ../src/docs/books/admin_guide/04-advanced-commands.md:25
#, no-wrap
msgid "`uniq` command"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:28
msgid ""
"The `uniq` command is a very powerful command, used with the `sort` command, "
"especially for log file analysis. It allows you to sort and display entries "
"by removing duplicates."
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:30
msgid ""
"To illustrate how the `uniq` command works, let's use a `firstnames.txt` "
"file containing a list of first names:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:31
#, no-wrap
msgid ""
"antoine\n"
"xavier\n"
"steven\n"
"patrick\n"
"xavier\n"
"antoine\n"
"antoine\n"
"steven\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:43
#: ../src/docs/books/admin_guide/04-advanced-commands.md:220
#: ../src/docs/books/admin_guide/04-advanced-commands.md:271
#: ../src/docs/books/admin_guide/04-advanced-commands.md:334
msgid "!!! Note"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:45
#, no-wrap
msgid "    `uniq` requires the input file to be sorted before running because it only compares consecutive lines.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:47
msgid ""
"With no argument, the `uniq` command will not display identical lines that "
"follow each other in the `firstnames.txt` file:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:48
#, no-wrap
msgid ""
"$ sort firstnames.txt | uniq\n"
"antoine\n"
"patrick\n"
"steven\n"
"xavier\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:57
msgid "To display only the rows that appear only once, use the `-u` option:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:58
#, no-wrap
msgid ""
"$ sort firstnames.txt | uniq -u\n"
"patrick\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:64
msgid ""
"Conversely, to display only the lines that appear at least twice in the "
"file, use the `-d` option:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:65
#, no-wrap
msgid ""
"$ sort firstnames.txt | uniq -d\n"
"antoine\n"
"steven\n"
"xavier\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:73
msgid "To simply delete lines that appear only once, use the `-D` option:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:74
#, no-wrap
msgid ""
"$ sort firstnames.txt | uniq -D\n"
"antoine\n"
"antoine\n"
"antoine\n"
"steven\n"
"steven\n"
"xavier\n"
"xavier\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:86
msgid ""
"Finally, to count the number of occurrences of each line, use the `-c` "
"option:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:87
#, no-wrap
msgid ""
"$ sort firstnames.txt | uniq -c\n"
"      3 antoine\n"
"      1 patrick\n"
"      2 steven\n"
"      2 xavier\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:95
#, no-wrap
msgid ""
"$ sort firstnames.txt | uniq -cd\n"
"      3 antoine\n"
"      2 steven\n"
"      2 xavier\n"
msgstr ""

#. type: Title ##
#: ../src/docs/books/admin_guide/04-advanced-commands.md:102
#, no-wrap
msgid "`xargs` commands"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:105
msgid ""
"The `xargs` command allows the construction and execution of command lines "
"from standard input."
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:107
msgid ""
"The `xargs` command reads whitespace or linefeed delimited arguments from "
"standard input, and executes the command (`/bin/echo` by default) one or "
"more times using the initial arguments followed by the arguments read from "
"standard input."
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:109
msgid "A first and simplest example would be the following:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:110
#, no-wrap
msgid ""
"$ xargs\n"
"use\n"
"of\n"
"xargs\n"
"<CTRL+D>\n"
"use of xargs\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:120
#, no-wrap
msgid "The `xargs` command waits for an input from the standard **stdin** input. Three lines are entered. The end of the user input is specified to `xargs` by the keystroke sequence <kbd>CTRL</kbd>+<kbd>D</kbd>. `xargs` then executes the default command `echo` followed by the three arguments corresponding to the user input, namely:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:121
#, no-wrap
msgid ""
"$ echo \"use\" \"of\" \"xargs\"\n"
"use of xargs\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:127
msgid "It is possible to specify a command to be run by `xargs`."
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:129
msgid ""
"In the following example, `xargs` will run the command `ls -ld` on the set "
"of folders specified in the standard input:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:130
#, no-wrap
msgid ""
"$ xargs ls -ld\n"
"/home\n"
"/tmp\n"
"/root\n"
"<CTRL+D>\n"
"drwxr-xr-x. 9 root root 4096  5 avril 11:10 /home\n"
"dr-xr-x---. 2 root root 4096  5 avril 15:52 /root\n"
"drwxrwxrwt. 3 root root 4096  6 avril 10:25 /tmp\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:142
msgid ""
"In practice, the `xargs` command executed the `ls -ld /home /tmp /root` "
"command."
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:144
msgid ""
"What happens if the command to be executed does not accept multiple "
"arguments, such as with the `find` command?"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:145
#, no-wrap
msgid ""
"$ xargs find /var/log -name\n"
"*.old\n"
"*.log\n"
"find: paths must precede expression: *.log\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:153
msgid ""
"The `xargs` command attempted to execute the `find` command with multiple "
"arguments behind the `-name` option, which caused `find` to generate an "
"error:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:154
#, no-wrap
msgid ""
"$ find /var/log -name \"*.old\" \"*.log\"\n"
"find: paths must precede expression: *.log\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:160
msgid ""
"In this case, the `xargs` command must be forced to execute the `find` "
"command several times (once per line entered as standard input). The `-L` "
"option followed by an **integer** allows you to specify the maximum number "
"of entries to be processed with the command at one time:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:161
#, no-wrap
msgid ""
"$ xargs -L 1 find /var/log -name\n"
"*.old\n"
"/var/log/dmesg.old\n"
"*.log\n"
"/var/log/boot.log\n"
"/var/log/anaconda.yum.log\n"
"/var/log/anaconda.storage.log\n"
"/var/log/anaconda.log\n"
"/var/log/yum.log\n"
"/var/log/audit/audit.log\n"
"/var/log/anaconda.ifcfg.log\n"
"/var/log/dracut.log\n"
"/var/log/anaconda.program.log\n"
"<CTRL+D>\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:179
msgid "To specify both arguments on the same line, use the `-n 1` option:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:180
#, no-wrap
msgid ""
"$ xargs -n 1 find /var/log -name\n"
"*.old *.log\n"
"/var/log/dmesg.old\n"
"/var/log/boot.log\n"
"/var/log/anaconda.yum.log\n"
"/var/log/anaconda.storage.log\n"
"/var/log/anaconda.log\n"
"/var/log/yum.log\n"
"/var/log/audit/audit.log\n"
"/var/log/anaconda.ifcfg.log\n"
"/var/log/dracut.log\n"
"/var/log/anaconda.program.log\n"
"<CTRL+D>\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:197
msgid "Case study of a backup with a `tar` based on a search:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:198
#, no-wrap
msgid ""
"$ find /var/log/ -name \"*.log\" -mtime -1 | xargs tar cvfP /root/log.tar\n"
"$ tar tvfP /root/log.tar\n"
"-rw-r--r-- root/root      1720 2017-04-05 15:43 /var/log/boot.log\n"
"-rw-r--r-- root/root    499270 2017-04-06 11:01 /var/log/audit/audit.log\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:206
msgid ""
"The special feature of the `xargs` command is that it places the input "
"argument at the end of the called command. This works very well with the "
"above example since the files passed in will form the list of files to be "
"added to the archive."
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:208
msgid ""
"Using the example of the `cp` command, to copy a list of files in a "
"directory, this list of files will be added at the end of the command... but "
"what the `cp` command expects at the end of the command is the destination. "
"To do this, use the `-I` option to put the input arguments somewhere else "
"than at the end of the line."
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:209
#, no-wrap
msgid "$ find /var/log -type f -name \"*.log\" | xargs -I % cp % /root/backup\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:214
msgid ""
"The `-I` option allows you to specify a character (the `%` character in the "
"above example) where the input files to `xargs` will be placed."
msgstr ""

#. type: Title ##
#: ../src/docs/books/admin_guide/04-advanced-commands.md:215
#, no-wrap
msgid "`yum-utils` package"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:218
msgid ""
"The `yum-utils` package is a collection of utilities, built for `yum` by "
"various authors, which make it easier and more powerful to use."
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:222
#, no-wrap
msgid "    While `yum` has been replaced by `dnf` in Rocky Linux 8, the package name has remained `yum-utils`, although it can be installed as `dnf-utils` as well. These are classic YUM utilities implemented as CLI shims on top of DNF to maintain backwards compatibility with `yum-3`.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:224
msgid "Here are some examples of these utilities:"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/admin_guide/04-advanced-commands.md:226
msgid "`repoquery` command"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:228
msgid ""
"The `repoquery` command is used to query the packages in the repository."
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:230
msgid "Examples of use:"
msgstr ""

#. type: Bullet: '  * '
#: ../src/docs/books/admin_guide/04-advanced-commands.md:235
msgid ""
"Display the dependencies of a package (it can be a software package that has "
"been installed or not installed), equivalent to `dnf deplist <package-name>` "
"``` repoquery --requires <package-name> ```"
msgstr ""

#. type: Bullet: '  * '
#: ../src/docs/books/admin_guide/04-advanced-commands.md:237
msgid ""
"Display the files provided by an installed package (does not work for "
"packages that are not installed), equivalent to `rpm -ql <package-name>`"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:265
#, no-wrap
msgid ""
"    ```\n"
"    $ repoquery -l yum-utils\n"
"    /etc/bash_completion.d\n"
"    /etc/bash_completion.d/yum-utils.bash\n"
"    /usr/bin/debuginfo-install\n"
"    /usr/bin/find-repos-of-install\n"
"    /usr/bin/needs-restarting\n"
"    /usr/bin/package-cleanup\n"
"    /usr/bin/repo-graph\n"
"    /usr/bin/repo-rss\n"
"    /usr/bin/repoclosure\n"
"    /usr/bin/repodiff\n"
"    /usr/bin/repomanage\n"
"    /usr/bin/repoquery\n"
"    /usr/bin/reposync\n"
"    /usr/bin/repotrack\n"
"    /usr/bin/show-changed-rco\n"
"    /usr/bin/show-installed\n"
"    /usr/bin/verifytree\n"
"    /usr/bin/yum-builddep\n"
"    /usr/bin/yum-config-manager\n"
"    /usr/bin/yum-debug-dump\n"
"    /usr/bin/yum-debug-restore\n"
"    /usr/bin/yum-groups-manager\n"
"    /usr/bin/yumdownloader\n"
"    â¦\n"
"    ```\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/admin_guide/04-advanced-commands.md:267
msgid "`yumdownloader` command:"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:269
msgid ""
"The `yumdownloader` command downloads RPM packages from the repositories.  "
"Equivalent to `dnf download --downloadonly --downloaddir ./ package-name`"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:273
#, no-wrap
msgid "    This command is very useful to quickly build a local repository of a few rpms!\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:275
msgid ""
"Example: `yumdownloader` will download the _samba_ rpm package and all its "
"dependencies:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:276
#, no-wrap
msgid ""
"$ yumdownloader --destdir /var/tmp --resolve samba\n"
"or\n"
"$ dnf download --downloadonly --downloaddir /var/tmp  --resolve  samba\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:286
#, no-wrap
msgid ""
"| Options     |  Comments                                                       |\n"
"|-------------|-----------------------------------------------------------------|\n"
"| `--destdir` | The downloaded packages will be stored in the specified folder. |\n"
"| `--resolve` | Also downloads the package dependencies.                        |\n"
msgstr ""

#. type: Title ##
#: ../src/docs/books/admin_guide/04-advanced-commands.md:287
#, no-wrap
msgid "`psmisc` packages"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:290
msgid "The `psmisc` package contains utilities for managing system processes:"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/admin_guide/04-advanced-commands.md:294
msgid ""
"`pstree`: the `pstree` command displays the current processes on the system "
"in a tree-like structure."
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/admin_guide/04-advanced-commands.md:294
msgid ""
"`killall`: the `killall` command sends a kill signal to all processes "
"identified by name."
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/admin_guide/04-advanced-commands.md:294
msgid ""
"`fuser`: the `fuser` command identifies the `PID` of processes that use the "
"specified files or file systems."
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:296
#: ../src/docs/books/admin_guide/04-advanced-commands.md:338
msgid "Examples:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:297
#, no-wrap
msgid ""
"$ pstree\n"
"systemdââ¬âNetworkManagerâââ2*[{NetworkManager}]\n"
"        ââagetty\n"
"        ââauditdâââ{auditd}\n"
"        ââcrond\n"
"        ââdbus-daemonâââ{dbus-daemon}\n"
"        ââfirewalldâââ{firewalld}\n"
"        ââlvmetad\n"
"        ââmasterââ¬âpickup\n"
"        â        ââqmgr\n"
"        ââpolkitdâââ5*[{polkitd}]\n"
"        âârsyslogdâââ2*[{rsyslogd}]\n"
"        ââsshdâââsshdâââbashâââpstree\n"
"        ââsystemd-journal\n"
"        ââsystemd-logind\n"
"        ââsystemd-udevd\n"
"        ââtunedâââ4*[{tuned}]\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:317
#, no-wrap
msgid "# killall httpd\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:322
msgid ""
"Kill processes (option `-k`) that access the `/etc/httpd/conf/httpd.conf` "
"file:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:323
#, no-wrap
msgid "# fuser -k /etc/httpd/conf/httpd.conf\n"
msgstr ""

#. type: Title ##
#: ../src/docs/books/admin_guide/04-advanced-commands.md:327
#, no-wrap
msgid "`watch` command"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:330
msgid ""
"The `watch` command regularly executes a command and displays the result in "
"the terminal in full screen."
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:332
msgid ""
"The `-n` option allows you to specify the number of seconds between each "
"execution of the command."
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:336
#, no-wrap
msgid "    To exit the `watch` command, you must type the keys: <kbd>CTRL</kbd>+<kbd>C</kbd> to kill the process.\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/admin_guide/04-advanced-commands.md:340
msgid "Display the end of the `/etc/passwd` file every 5 seconds:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:341
#, no-wrap
msgid "$ watch -n 5 tail -n 3 /etc/passwd\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:346
msgid "Result:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:347
#, no-wrap
msgid ""
"Every 5.0s: tail -n 3 /etc/passwd                                                                                                                                rockstar.rockylinux.lan: Thu Jul  1 15:43:59 2021\n"
"\n"
"sssd:x:996:993:User for sssd:/:/sbin/nologin\n"
"chrony:x:995:992::/var/lib/chrony:/sbin/nologin\n"
"sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/admin_guide/04-advanced-commands.md:356
msgid "Monitoring the number of files in a folder:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:357
#, no-wrap
msgid "$ watch -n 1 'ls -l | wc -l'\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/books/admin_guide/04-advanced-commands.md:362
msgid "Display a clock:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/04-advanced-commands.md:363
#, no-wrap
msgid "$ watch -t -n 1 date\n"
msgstr ""
