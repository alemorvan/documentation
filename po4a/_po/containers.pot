# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-06-13 20:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: ../src/docs/books/admin_guide/04-advanced-commands.md:43
#: ../src/docs/books/admin_guide/04-advanced-commands.md:220
#: ../src/docs/books/admin_guide/04-advanced-commands.md:271
#: ../src/docs/books/admin_guide/04-advanced-commands.md:334
#: ../src/docs/books/admin_guide/05-vi.md:70
#: ../src/docs/books/admin_guide/05-vi.md:206
#: ../src/docs/books/admin_guide/05-vi.md:272
#: ../src/docs/books/admin_guide/06-users.md:36
#: ../src/docs/books/admin_guide/06-users.md:92
#: ../src/docs/books/admin_guide/06-users.md:220
#: ../src/docs/books/admin_guide/06-users.md:350
#: ../src/docs/books/admin_guide/06-users.md:598
#: ../src/docs/books/admin_guide/06-users.md:754
#: ../src/docs/books/admin_guide/06-users.md:818
#: ../src/docs/books/admin_guide/11-tasks.md:174
#: ../src/docs/books/admin_guide/12-network.md:158
#: ../src/docs/books/admin_guide/03-commands.md:516
#: ../src/docs/books/admin_guide/03-commands.md:693
#: ../src/docs/books/admin_guide/03-commands.md:1216
#: ../src/docs/books/admin_guide/03-commands.md:1262
#: ../src/docs/books/admin_guide/03-commands.md:1297
#: ../src/docs/books/admin_guide/07-file-systems.md:395
#: ../src/docs/books/admin_guide/07-file-systems.md:437
#: ../src/docs/books/admin_guide/07-file-systems.md:447
#: ../src/docs/books/admin_guide/07-file-systems.md:515
#: ../src/docs/books/admin_guide/07-file-systems.md:556
#: ../src/docs/books/admin_guide/07-file-systems.md:627
#: ../src/docs/books/admin_guide/07-file-systems.md:653
#: ../src/docs/books/admin_guide/07-file-systems.md:672
#: ../src/docs/books/admin_guide/07-file-systems.md:676
#: ../src/docs/books/admin_guide/07-file-systems.md:1019
#: ../src/docs/books/admin_guide/08-process.md:49
#: ../src/docs/books/admin_guide/08-process.md:238
#: ../src/docs/books/admin_guide/09-backups.md:27
#: ../src/docs/books/admin_guide/09-backups.md:116
#: ../src/docs/books/admin_guide/09-backups.md:133
#: ../src/docs/books/admin_guide/09-backups.md:148
#: ../src/docs/books/admin_guide/09-backups.md:281
#: ../src/docs/books/admin_guide/09-backups.md:285
#: ../src/docs/books/admin_guide/09-backups.md:301
#: ../src/docs/books/admin_guide/09-backups.md:342
#: ../src/docs/books/admin_guide/09-backups.md:352
#: ../src/docs/books/admin_guide/09-backups.md:554
#: ../src/docs/books/admin_guide/09-backups.md:771
#: ../src/docs/books/admin_guide/10-boot.md:114
#: ../src/docs/books/admin_guide/10-boot.md:153
#: ../src/docs/books/admin_guide/10-boot.md:165
#: ../src/docs/books/admin_guide/13-softwares.md:22
#: ../src/docs/books/learning_ansible/01-basic.md:51
#: ../src/docs/books/learning_ansible/01-basic.md:104
#: ../src/docs/books/learning_ansible/01-basic.md:112
#: ../src/docs/books/learning_ansible/01-basic.md:328
#: ../src/docs/books/learning_ansible/01-basic.md:415
#: ../src/docs/books/learning_ansible/01-basic.md:492
#: ../src/docs/books/learning_ansible/01-basic.md:633
#: ../src/docs/books/learning_ansible/01-basic.md:656
#: ../src/docs/books/learning_ansible/02-advanced.md:34
#: ../src/docs/books/learning_ansible/02-advanced.md:150
#: ../src/docs/books/learning_ansible/02-advanced.md:182
#: ../src/docs/books/learning_ansible/02-advanced.md:269
#: ../src/docs/books/learning_ansible/02-advanced.md:277
#: ../src/docs/books/learning_ansible/02-advanced.md:287
#: ../src/docs/books/learning_ansible/02-advanced.md:293
#: ../src/docs/books/learning_ansible/02-advanced.md:360
#: ../src/docs/books/learning_ansible/02-advanced.md:428
#: ../src/docs/books/learning_ansible/02-advanced.md:601
#: ../src/docs/books/learning_ansible/03-working-with-files.md:33
#: ../src/docs/books/learning_ansible/03-working-with-files.md:58
#: ../src/docs/books/learning_ansible/03-working-with-files.md:77
#: ../src/docs/books/learning_ansible/03-working-with-files.md:96
#: ../src/docs/books/learning_ansible/03-working-with-files.md:113
#: ../src/docs/books/learning_ansible/04-ansible-galaxy.md:65
#: ../src/docs/books/learning_ansible/04-ansible-galaxy.md:432
#: ../src/docs/books/learning_ansible/05-deployments.md:41
#: ../src/docs/books/learning_ansible/05-deployments.md:124
#: ../src/docs/books/learning_ansible/05-deployments.md:196
#: ../src/docs/books/learning_ansible/05-deployments.md:616
#: ../src/docs/books/learning_ansible/06-large-scale-infrastructure.md:36
#: ../src/docs/books/learning_ansible/06-large-scale-infrastructure.md:40
#: ../src/docs/books/learning_ansible/06-large-scale-infrastructure.md:80
#: ../src/docs/books/learning_ansible/06-large-scale-infrastructure.md:214
#: ../src/docs/books/learning_ansible/07-working-with-filters.md:32
#: ../src/docs/books/learning_ansible/07-working-with-filters.md:75
#: ../src/docs/books/learning_bash/02-using-variables.md:153
#: ../src/docs/books/learning_bash/02-using-variables.md:193
#: ../src/docs/books/learning_bash/05-tests.md:245
#: ../src/docs/books/learning_bash/07-loops.md:180
#: ../src/docs/books/lxd_server/04-firewall.md:80
#: ../src/docs/books/nvchad/plugins/md_preview.md:140
#: ../src/docs/books/nvchad/template_chadrc.md:239
#: ../src/docs/gemstones/https_rsa_keygen.md:34
#: ../src/docs/gemstones/systemd_service_for_python_script.md:80
#: ../src/docs/guides/8_6_installation.md:37
#: ../src/docs/guides/8_6_installation.md:168
#: ../src/docs/guides/8_6_installation.md:176
#: ../src/docs/guides/8_6_installation.md:182
#: ../src/docs/guides/8_6_installation.md:250
#: ../src/docs/guides/automation/olivetin.md:60
#: ../src/docs/guides/automation/templates-automation-packer-vsphere.md:307
#: ../src/docs/guides/automation/templates-automation-packer-vsphere.md:323
#: ../src/docs/guides/automation/templates-automation-packer-vsphere.md:486
#: ../src/docs/guides/automation/templates-automation-packer-vsphere.md:533
#: ../src/docs/guides/automation/templates-automation-packer-vsphere.md:667
#: ../src/docs/guides/containers/lxd_web_servers.md:35
#: ../src/docs/guides/containers/lxd_web_servers.md:45
#: ../src/docs/guides/containers/lxd_web_servers.md:301
#: ../src/docs/guides/containers/lxd_web_servers.md:352
#: ../src/docs/guides/containers/lxd_web_servers.md:605
#: ../src/docs/guides/containers/lxd_web_servers.md:665
#: ../src/docs/guides/containers/lxd_web_servers.md:737
#: ../src/docs/guides/containers/lxd_web_servers.md:796
#: ../src/docs/guides/contribute/mkdocs_lsyncd.md:53
#: ../src/docs/guides/contribute/navigation.md:60
#: ../src/docs/guides/custom-linux-kernel.md:453
#: ../src/docs/guides/editors/micro.md:30
#: ../src/docs/guides/file_sharing/glusterfs.md:46
#: ../src/docs/guides/file_sharing/glusterfs.md:64
#: ../src/docs/guides/file_sharing/glusterfs.md:102
#: ../src/docs/guides/file_sharing/glusterfs.md:203
#: ../src/docs/guides/installation.md:36 ../src/docs/guides/installation.md:175
#: ../src/docs/guides/installation.md:183
#: ../src/docs/guides/installation.md:193
#: ../src/docs/guides/installation.md:266
#: ../src/docs/guides/proxies/haproxy_apache_lxd.md:71
#: ../src/docs/guides/security/authentication/active_directory_authentication.md:31
#: ../src/docs/guides/security/authentication/active_directory_authentication.md:126
#: ../src/docs/guides/security/authentication/active_directory_authentication.md:253
#: ../src/docs/guides/security/firewalld-beginners.md:89
#: ../src/docs/guides/security/firewalld-beginners.md:144
#: ../src/docs/guides/security/firewalld-beginners.md:258
#: ../src/docs/guides/security/firewalld.md:51
#: ../src/docs/guides/security/firewalld.md:94
#: ../src/docs/guides/security/firewalld.md:228
#: ../src/docs/guides/security/firewalld.md:372
#: ../src/docs/guides/security/generating_ssl_keys_lets_encrypt.md:72
#: ../src/docs/guides/security/learning_selinux.md:137
#: ../src/docs/guides/security/learning_selinux.md:253
#: ../src/docs/guides/security/learning_selinux.md:356
#: ../src/docs/guides/virtualization/vbox-rocky.md:27
#: ../src/docs/guides/web/nginx-mainline.md:30
#: ../src/docs/guides/web/nginx-mainline.md:99
#: ../src/docs/guides/web/nginx-mainline.md:141
#: ../src/docs/guides/web/nginx-mainline.md:254
#: ../src/docs/guides/web/nginx-mainline.md:333
#: ../src/docs/guides/web/nginx-multisite.md:73
#: ../src/docs/guides/web/nginx-multisite.md:233
#: ../src/docs/guides/web/nginx-multisite.md:292
#: ../src/docs/guides/web/nginx-multisite.md:302
#: ../src/docs/guides/web/php.md:33 ../src/docs/guides/web/php.md:76
#: ../src/docs/guides/web/php.md:181 ../src/docs/guides/web/php.md:230
#: ../src/docs/guides/web/php.md:271 ../src/docs/guides/web/php.md:467
#: ../src/docs/guides/web/php.md:471 ../src/docs/release_notes/9_2.md:26
msgid "!!! Note"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/05-vi.md:90
#: ../src/docs/books/admin_guide/06-users.md:239
#: ../src/docs/books/admin_guide/06-users.md:336
#: ../src/docs/books/admin_guide/06-users.md:770
#: ../src/docs/books/admin_guide/11-tasks.md:42
#: ../src/docs/books/admin_guide/11-tasks.md:81
#: ../src/docs/books/admin_guide/11-tasks.md:93
#: ../src/docs/books/admin_guide/11-tasks.md:153
#: ../src/docs/books/admin_guide/11-tasks.md:203
#: ../src/docs/books/admin_guide/12-network.md:76
#: ../src/docs/books/admin_guide/12-network.md:388
#: ../src/docs/books/admin_guide/12-network.md:637
#: ../src/docs/books/admin_guide/03-commands.md:329
#: ../src/docs/books/admin_guide/03-commands.md:1266
#: ../src/docs/books/admin_guide/03-commands.md:1325
#: ../src/docs/books/admin_guide/03-commands.md:1480
#: ../src/docs/books/admin_guide/07-file-systems.md:48
#: ../src/docs/books/admin_guide/07-file-systems.md:88
#: ../src/docs/books/admin_guide/07-file-systems.md:389
#: ../src/docs/books/admin_guide/07-file-systems.md:505
#: ../src/docs/books/admin_guide/07-file-systems.md:582
#: ../src/docs/books/admin_guide/07-file-systems.md:903
#: ../src/docs/books/admin_guide/07-file-systems.md:1015
#: ../src/docs/books/admin_guide/09-backups.md:175
#: ../src/docs/books/admin_guide/09-backups.md:200
#: ../src/docs/books/admin_guide/09-backups.md:264
#: ../src/docs/books/admin_guide/09-backups.md:461
#: ../src/docs/books/admin_guide/09-backups.md:488
#: ../src/docs/books/admin_guide/09-backups.md:620
#: ../src/docs/books/admin_guide/09-backups.md:714
#: ../src/docs/books/admin_guide/13-softwares.md:94
#: ../src/docs/books/learning_ansible/01-basic.md:37
#: ../src/docs/books/learning_ansible/01-basic.md:288
#: ../src/docs/books/learning_ansible/01-basic.md:379
#: ../src/docs/books/learning_ansible/01-basic.md:590
#: ../src/docs/books/learning_bash/05-tests.md:320
#: ../src/docs/books/learning_bash/05-tests.md:367
#: ../src/docs/books/nvchad/plugins/md_preview.md:31
#: ../src/docs/books/nvchad/plugins/projectmgr.md:137
#: ../src/docs/guides/8_6_installation.md:191
#: ../src/docs/guides/8_6_installation.md:207
#: ../src/docs/guides/automation/templates-automation-packer-vsphere.md:510
#: ../src/docs/guides/containers/lxd_web_servers.md:242
#: ../src/docs/guides/installation.md:202
#: ../src/docs/guides/security/firewalld-beginners.md:283
#: ../src/docs/guides/security/firewalld-beginners.md:410
#: ../src/docs/guides/security/firewalld.md:182
#: ../src/docs/guides/security/firewalld.md:220
#: ../src/docs/guides/security/learning_selinux.md:158
#: ../src/docs/guides/security/learning_selinux.md:243
#: ../src/docs/guides/security/learning_selinux.md:263
#: ../src/docs/guides/web/php.md:145
msgid "!!! Warning"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/admin_guide/13-softwares.md:749
#: ../src/docs/books/lxd_server/01-install.md:20
#: ../src/docs/books/nvchad/install_nvim.md:46
#: ../src/docs/guides/cms/cloud_server_using_nextcloud.md:49
#: ../src/docs/guides/containers/lxd_web_servers.md:67
#: ../src/docs/guides/containers/lxd_web_servers.md:624
#: ../src/docs/guides/containers/lxd_web_servers.md:857
#: ../src/docs/guides/security/generating_ssl_keys_lets_encrypt.md:53
#: ../src/docs/guides/web/apache_hardened_webserver/rkhunter.md:43
#, no-wrap
msgid "dnf install epel-release\n"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/books/admin_guide/13-softwares.md:785
#: ../src/docs/guides/containers/lxd_web_servers.md:73
#: ../src/docs/guides/containers/lxd_web_servers.md:851
#: ../src/docs/guides/containers/podman-nextcloud.md:51
#, no-wrap
msgid "dnf update\n"
msgstr ""

#. type: Title ##
#: ../src/docs/books/admin_guide/13-softwares.md:900
#: ../src/docs/books/nvchad/nvchad_ui/nvimtree.md:105
#: ../src/docs/books/nvchad/template_chadrc.md:352
#: ../src/docs/gemstones/bash_stub.md:103
#: ../src/docs/gemstones/perl_search_replace.md:38
#: ../src/docs/gemstones/sed_search_replace.md:72
#: ../src/docs/gemstones/systemd_service_for_python_script.md:172
#: ../src/docs/guides/automation/olivetin.md:142
#: ../src/docs/guides/cms/dokuwiki_server.md:306
#: ../src/docs/guides/communications/asterisk_installation.md:261
#: ../src/docs/guides/containers/lxd_web_servers.md:919
#: ../src/docs/guides/containers/podman-nextcloud.md:456
#: ../src/docs/guides/contribute/local_docs.md:47
#: ../src/docs/guides/contribute/mkdocs_lsyncd.md:322
#: ../src/docs/guides/contribute/navigation.md:129
#: ../src/docs/guides/contribute/rockydocs_formatting.md:458
#: ../src/docs/guides/database/database_mariadb-server.md:197
#: ../src/docs/guides/desktop/kde_installation.md:105
#: ../src/docs/guides/desktop/mate_installation.md:200
#: ../src/docs/guides/desktop/xfce_installation.md:218
#: ../src/docs/guides/editors/micro.md:79
#: ../src/docs/guides/email/postfix_reporting.md:254
#: ../src/docs/guides/file_sharing/secure_ftp_server_vsftpd.md:270
#: ../src/docs/guides/file_sharing/sftp.md:765
#: ../src/docs/guides/proxies/pound.md:460
#: ../src/docs/guides/security/dnf_automatic.md:119
#: ../src/docs/guides/security/enabling_iptables_firewall.md:54
#: ../src/docs/guides/security/firewalld-beginners.md:427
#: ../src/docs/guides/security/firewalld.md:477
#: ../src/docs/guides/security/pam.md:137
#: ../src/docs/guides/security/ssl_keys_https.md:136
#: ../src/docs/guides/virtualization/vbox-rocky.md:160
#: ../src/docs/guides/web/apache_hardened_webserver/index.md:147
#: ../src/docs/guides/web/apache_hardened_webserver/modsecurity.md:235
#: ../src/docs/guides/web/apache_hardened_webserver/ossec-hids.md:157
#: ../src/docs/guides/web/apache_hardened_webserver/rkhunter.md:91
#: ../src/docs/guides/web/mod_SSL_apache.md:171
#: ../src/docs/guides/web/nginx-mainline.md:352
#: ../src/docs/guides/web/nginx-multisite.md:359
#, no-wrap
msgid "Conclusion"
msgstr ""

#. type: Plain text
#: ../src/docs/books/admin_guide/14-special-authority.md:338
#: ../src/docs/books/admin_guide/14-special-authority.md:354
#: ../src/docs/books/admin_guide/14-special-authority.md:404
#: ../src/docs/books/admin_guide/14-special-authority.md:435
#: ../src/docs/books/admin_guide/14-special-authority.md:690
#: ../src/docs/books/disa_stig/disa_stig_part2.md:83
#: ../src/docs/books/disa_stig/disa_stig_part2.md:102
#: ../src/docs/books/learning_bash/03-data-entry-and-manipulations.md:253
#: ../src/docs/books/lxd_server/04-firewall.md:76
#: ../src/docs/books/lxd_server/08-snapshots.md:86
#: ../src/docs/gemstones/RL9_network_manager.md:150
#: ../src/docs/gemstones/nmtui.md:52
#: ../src/docs/gemstones/view_kernel_conf.md:21
#: ../src/docs/guides/backup/rsync_ssh.md:79
#: ../src/docs/guides/cms/dokuwiki_server.md:226
#: ../src/docs/guides/containers/lxd_web_servers.md:786
#: ../src/docs/guides/containers/podman-nextcloud.md:270
#: ../src/docs/guides/contribute/rockydocs_formatting.md:96
#: ../src/docs/guides/file_sharing/sftp.md:264
#: ../src/docs/guides/package_management/index.md:10
#: ../src/docs/guides/proxies/pound.md:211
#: ../src/docs/guides/proxies/pound.md:265 ../src/docs/release_notes/8_4.md:20
msgid "!!! warning"
msgstr ""

#. type: Title #
#: ../src/docs/books/disa_stig/disa_stig_part2.md:13
#: ../src/docs/books/disa_stig/disa_stig_part1.md:23
#: ../src/docs/books/learning_ansible/05-deployments.md:31
#: ../src/docs/books/learning_bash/appendix/02-variables-logs.md:14
#: ../src/docs/books/lxd_server/00-toc.md:1
#: ../src/docs/books/lxd_server/00-toc.md:13
#: ../src/docs/books/nvchad/index.md:12
#: ../src/docs/books/nvchad/plugins/index.md:14
#: ../src/docs/books/nvchad/plugins/md_preview.md:14
#: ../src/docs/books/nvchad/plugins/projectmgr.md:14
#: ../src/docs/books/nvchad/vale_nvchad.md:12
#: ../src/docs/gemstones/dnf-swap.md:18 ../src/docs/gemstones/docker.md:10
#: ../src/docs/gemstones/nmtui.md:8 ../src/docs/gemstones/setup_local_repo.md:8
#: ../src/docs/gemstones/string_color.md:11
#: ../src/docs/guides/automation/cron_jobs_howto.md:25
#: ../src/docs/guides/automation/olivetin.md:14
#: ../src/docs/guides/automation/templates-automation-packer-vsphere.md:25
#: ../src/docs/guides/backup/mirroring_lsyncd.md:26
#: ../src/docs/guides/backup/rsnapshot_backup.md:22
#: ../src/docs/guides/backup/rsync_ssh.md:24
#: ../src/docs/guides/cms/cloud_server_using_nextcloud.md:28
#: ../src/docs/guides/cms/dokuwiki_server.md:23
#: ../src/docs/guides/containers/lxd_web_servers.md:10
#: ../src/docs/guides/containers/podman-nextcloud.md:13
#: ../src/docs/guides/contribute/local_docs.md:11
#: ../src/docs/guides/contribute/mkdocs_lsyncd.md:11
#: ../src/docs/guides/contribute/mkdocs_venv.md:14
#: ../src/docs/guides/contribute/style_guide.md:14
#: ../src/docs/guides/database/database_mariadb-server.md:21
#: ../src/docs/guides/desktop/kde_installation.md:11
#: ../src/docs/guides/dns/private_dns_server_using_bind.md:22
#: ../src/docs/guides/editors/micro.md:14
#: ../src/docs/guides/email/postfix_reporting.md:22
#: ../src/docs/guides/file_sharing/glusterfs.md:16
#: ../src/docs/guides/file_sharing/secure_ftp_server_vsftpd.md:21
#: ../src/docs/guides/file_sharing/sftp.md:16
#: ../src/docs/guides/migrate2rocky.md:18
#: ../src/docs/guides/network/basic_network_configuration.md:12
#: ../src/docs/guides/network/librenms_monitoring_server.md:13
#: ../src/docs/guides/package_management/index.md:1
#: ../src/docs/guides/package_management/index.md:5
#: ../src/docs/guides/proxies/haproxy_apache_lxd.md:9
#: ../src/docs/guides/proxies/pound.md:17
#: ../src/docs/guides/security/authentication/active_directory_authentication.md:13
#: ../src/docs/guides/security/enabling_iptables_firewall.md:22
#: ../src/docs/guides/security/firewalld-beginners.md:10
#: ../src/docs/guides/security/generating_ssl_keys_lets_encrypt.md:23
#: ../src/docs/guides/security/ssh_public_private_keys.md:21
#: ../src/docs/guides/security/ssl_keys_https.md:22
#: ../src/docs/guides/virtualization/vbox-rocky.md:13
#: ../src/docs/guides/web/apache-sites-enabled.md:25
#: ../src/docs/guides/web/apache_hardened_webserver/index.md:23
#: ../src/docs/guides/web/apache_hardened_webserver/modsecurity.md:24
#: ../src/docs/guides/web/apache_hardened_webserver/ossec-hids.md:22
#: ../src/docs/guides/web/apache_hardened_webserver/rkhunter.md:23
#: ../src/docs/guides/web/nginx-mainline.md:13
#: ../src/docs/guides/web/nginx-multisite.md:14
#: ../src/docs/labs/security/introduction.md:1
#: ../src/docs/labs/security/introduction.md:5
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Title ##
#: ../src/docs/books/lxd_server/00-toc.md:25
#: ../src/docs/guides/cms/cloud_server_using_nextcloud.md:17
#: ../src/docs/guides/cms/dokuwiki_server.md:13
#: ../src/docs/guides/containers/lxd_web_servers.md:48
#, no-wrap
msgid "Prerequisites And Assumptions"
msgstr ""

#. type: Plain text
#: ../src/docs/books/lxd_server/01-install.md:19
#: ../src/docs/guides/containers/lxd_web_servers.md:66
msgid ""
"LXD requires the EPEL (Extra Packages for Enterprise Linux) repository, "
"which is easy to install using:"
msgstr ""

#. type: Plain text
#: ../src/docs/books/lxd_server/01-install.md:25
#: ../src/docs/guides/containers/lxd_web_servers.md:72
msgid "Once installed, check for updates:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/books/lxd_server/01-install.md:50
#: ../src/docs/guides/containers/lxd_web_servers.md:89
#, no-wrap
msgid "systemctl enable snapd\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/lxd_server/01-install.md:55
#: ../src/docs/guides/containers/lxd_web_servers.md:94
msgid "And then run:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/books/lxd_server/01-install.md:56
#: ../src/docs/guides/containers/lxd_web_servers.md:95
#, no-wrap
msgid "systemctl start snapd\n"
msgstr ""

#. type: Title ###
#: ../src/docs/books/lxd_server/01-install.md:62
#: ../src/docs/guides/containers/lxd_web_servers.md:103
#, no-wrap
msgid "Install LXD"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/books/lxd_server/01-install.md:66
#: ../src/docs/guides/containers/lxd_web_servers.md:107
#, no-wrap
msgid "snap install lxd\n"
msgstr ""

#. type: Title ###
#: ../src/docs/books/lxd_server/03-lxdinit.md:17
#: ../src/docs/books/lxd_server/30-appendix_a.md:57
#: ../src/docs/guides/containers/lxd_web_servers.md:115
#, no-wrap
msgid "LXD Initialization"
msgstr ""

#. type: Plain text
#: ../src/docs/books/lxd_server/03-lxdinit.md:20
#: ../src/docs/guides/containers/lxd_web_servers.md:118
msgid ""
"Now that the environment is all set up, we are ready to initialize LXD. This "
"is an automated script that asks a series of questions to get your LXD "
"instance up and running:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/books/lxd_server/03-lxdinit.md:21
#: ../src/docs/guides/containers/lxd_web_servers.md:119
#, no-wrap
msgid "lxd init\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/lxd_server/03-lxdinit.md:26
#: ../src/docs/books/lxd_server/30-appendix_a.md:68
#: ../src/docs/guides/containers/lxd_web_servers.md:124
msgid ""
"Here are the questions and our answers for the script, with a little "
"explanation where warranted:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/lxd_server/03-lxdinit.md:27
#: ../src/docs/books/lxd_server/30-appendix_a.md:69
#: ../src/docs/guides/containers/lxd_web_servers.md:125
#, no-wrap
msgid "Would you like to use LXD clustering? (yes/no) [default=no]:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/lxd_server/03-lxdinit.md:33
#: ../src/docs/guides/containers/lxd_web_servers.md:131
#, no-wrap
msgid "Do you want to configure a new storage pool? (yes/no) [default=yes]:\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/lxd_server/03-lxdinit.md:73
#: ../src/docs/books/lxd_server/30-appendix_a.md:104
#: ../src/docs/guides/containers/lxd_web_servers.md:185
#, no-wrap
msgid "Would you like the LXD server to be available over the network? (yes/no) [default=no]: yes\n"
msgstr ""

#. type: Title ####
#: ../src/docs/books/lxd_server/03-lxdinit.md:93
#: ../src/docs/guides/containers/lxd_web_servers.md:213
#, no-wrap
msgid "Setting Up User Privileges"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/books/lxd_server/03-lxdinit.md:97
#: ../src/docs/guides/containers/lxd_web_servers.md:217
#, no-wrap
msgid "useradd -G wheel,lxd lxdadmin\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/lxd_server/03-lxdinit.md:102
#: ../src/docs/guides/containers/lxd_web_servers.md:222
msgid "Then set the password:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/books/lxd_server/03-lxdinit.md:103
#: ../src/docs/guides/containers/lxd_web_servers.md:223
#, no-wrap
msgid "passwd lxdadmin\n"
msgstr ""

#. type: Plain text
#: ../src/docs/books/lxd_server/03-lxdinit.md:107
#: ../src/docs/guides/containers/lxd_web_servers.md:228
msgid "As with the other passwords, save this to a secure location."
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/books/lxd_server/04-firewall.md:69
#: ../src/docs/books/lxd_server/04-firewall.md:89
#: ../src/docs/guides/containers/lxd_web_servers.md:265
#: ../src/docs/guides/proxies/pound.md:290
#: ../src/docs/guides/proxies/pound.md:327
#: ../src/docs/guides/security/firewalld-beginners.md:84
#, no-wrap
msgid "firewall-cmd --reload\n"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/books/lxd_server/05-lxd_images.md:20
#: ../src/docs/guides/containers/lxd_web_servers.md:326
#, no-wrap
msgid "lxc image list images: | more\n"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/books/lxd_server/05-lxd_images.md:93
#: ../src/docs/books/lxd_server/06-profiles.md:126
#: ../src/docs/books/lxd_server/06-profiles.md:277
#: ../src/docs/books/lxd_server/30-appendix_a.md:141
#: ../src/docs/guides/containers/lxd_web_servers.md:367
#, no-wrap
msgid "lxc list\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/books/lxd_server/30-appendix_a.md:89
#: ../src/docs/guides/containers/lxd_web_servers.md:163
#, no-wrap
msgid "Would you like to connect to a MAAS server? (yes/no) [default=no]:\n"
msgstr ""

#. type: Title ##
#: ../src/docs/gemstones/dnf-swap.md:65 ../src/docs/gemstones/docker.md:39
#: ../src/docs/gemstones/nmcli.md:33
#: ../src/docs/guides/containers/lxd_web_servers.md:913
#, no-wrap
msgid "Notes"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/cms/cloud_server_using_nextcloud.md:124
#: ../src/docs/guides/containers/lxd_web_servers.md:563
#: ../src/docs/guides/web/apache_hardened_webserver/modsecurity.md:60
#, no-wrap
msgid "systemctl start httpd\n"
msgstr ""

#. type: YAML Front Matter: title
#: ../src/docs/guides/containers/lxd_web_servers.md:1
#, no-wrap
msgid "LXD Beginners Guide-Multiple Servers"
msgstr ""

#. type: Title #
#: ../src/docs/guides/containers/lxd_web_servers.md:8
#, no-wrap
msgid "Building a Network of Websites/Web Servers With LXD, for Beginners"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:13
msgid ""
"Okay, so we already have [a guide on installing LXD/LXC on Rocky Linux]"
"(../../books/lxd_server/00-toc.md), but that was written by someone who "
"knows what he’s doing, and wanted to build a containerized network of "
"servers and/or apps on a physical machine on his local network. It’s great, "
"and I’ll be straight up stealing bits of it so I don’t have to write as much."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:15
msgid ""
"But, if you’ve just heard about Linux Containers, and don’t really "
"understand how they work yet, but you want to host some websites, this is "
"the guide for you. *This tutorial will teach you how to host basic websites "
"with LXD and LXC on any system, including virtual private servers and cloud "
"hosting.*"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:17
msgid ""
"So first, what’s a Linux Container? Well, for the absolute beginner, it’s a "
"way to make one computer pretend that it’s actually a lot more computers. "
"These “containers” each house a basic—usually stripped-down—version of an "
"operating system you choose. You can use each container like an individual "
"server; put *nginx* on one, *Apache* on another, and even use a third as a "
"database server."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:19
msgid ""
"The basic advantage is that if one app or website inside its own container "
"experiences severe bugs, a hack, or other problems, it’s unlikely to affect "
"the rest of your server or the other apps and websites. Also, containers are "
"super easy to snapshot, back up, and restore."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:21
msgid ""
"In this case, we’ll be running Rocky Linux in our containers, on top of our "
"“host” system, which is also Rocky Linux."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:23
msgid "Conceptually, it’s something like this:"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:25
msgid ""
"![A graph showing how one computer can pretend to be several](../images/lxd-"
"web-server-01.png)"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:27
msgid ""
"If you’ve ever played with VirtualBox to run some Windows apps, it’s like "
"that, but not. Unlike virtual machines, Linux Containers don’t emulate an "
"entire hardware environment for each container. Rather, they all share a few "
"virtual devices by default for networking and storage, though you can add "
"more virtual devices. As a result, they require a lot less overhead "
"(processing power and RAM) than a virtual machine."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:29
msgid ""
"For those Docker fiends out there (Docker being another container-based "
"system, *not* a VM system), Linux Containers are less ephemeral than what "
"you’re used to. All data in every container instance is persistent, and any "
"changes you make are permanent unless you revert to a backup. In short, "
"shutting down the container won’t erase your sins."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:31
msgid "Heh."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:33
msgid ""
"LXD, specifically, is a command-line application that helps you to set up "
"and manage Linux Containers. That's what we're going to be installing on our "
"Rocky Linux host server today. I'm going to be writing LXC/LXD a lot though, "
"as there's a lot of old documentation which refers to LXC only, and I'm "
"trying to make it easier for people to find updated guides like this one."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:37
#, no-wrap
msgid "    There was a precursor app to LXD which was also called \"LXC\". As it stands today: LXC is the technology, LXD is the app.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:39
msgid ""
"We’ll be using them both to create an environment that works something like "
"this:"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:41
msgid ""
"![A diagram of the intended Linux Container structure](../images/lxd-web-"
"server-02.png)"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:43
msgid ""
"Specifically, I’m going to show you how to set up simple Nginx and Apache "
"web servers inside of your server containers, and use another container with "
"Nginx as a reverse proxy. Again, this setup should work in any environment: "
"from local networks to virtual private servers."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:47
#, no-wrap
msgid "    A reverse proxy is a program that takes incoming connections from the internet (or your local network) and routes them to the right server, container, or app. There are also dedicated tools for this job like HaProxy... but weirdly enough, I find Nginx a lot easier to use.\n"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:58
msgid ""
"Basic familiarity with the Linux command line interface. You should know how "
"to use SSH if you’re installing LXC/LXD on a remote server."
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:58
msgid ""
"An internet-connected server, physical or virtual, with Rocky Linux already "
"running on it."
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:58
msgid "Two domain names pointed right at your server with an A record."
msgstr ""

#. type: Bullet: '    * '
#: ../src/docs/guides/containers/lxd_web_servers.md:58
msgid ""
"Two subdomains would also work just as well. One domain with a wildcard "
"subdomain record would also, or a custom LAN domain... you get the picture."
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:58
msgid ""
"A command-line text editor. *nano* will do, *micro* is my favorite, but use "
"whatever makes you comfortable."
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:58
msgid ""
"You *can* follow this whole tutorial as the root user, but you probably "
"shouldn’t. After the initial installation of LXC/LXD, we’ll guide you in "
"creating an unprivileged user specifically for operating LXD commands."
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:58
msgid ""
"We now have Rocky Linux images to base your containers on, and they’re "
"awesome."
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:58
msgid ""
"If you're not too familiar with Nginx or Apache, you **will** need to check "
"out some of our other guides if you want to get a full productions server up "
"and running. Don't worry, I'll link them below."
msgstr ""

#. type: Title ##
#: ../src/docs/guides/containers/lxd_web_servers.md:59
#, no-wrap
msgid "Setting Up The Host Server Environment"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:62
msgid ""
"So here’s where I’m going to copy and paste bits from the other LXD guide, "
"for your convenience and mine. All credit for most of this part goes to "
"Steven Spencer."
msgstr ""

#. type: Title ###
#: ../src/docs/guides/containers/lxd_web_servers.md:63
#, no-wrap
msgid "Install the EPEL Repository"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:78
msgid ""
"If there were kernel updates during the update process above, reboot your "
"server"
msgstr ""

#. type: Title ###
#: ../src/docs/guides/containers/lxd_web_servers.md:79
#, no-wrap
msgid "Install snapd"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:82
msgid ""
"LXD must be installed from a snap\\* package for Rocky Linux. For this "
"reason, we need to install snapd with:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:83
#, no-wrap
msgid "dnf install snapd\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:88
msgid ""
"And now enable the snapd service to auto-start when your server reboots, and "
"start it running now:"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:100
msgid ""
"Reboot the server before continuing here. You can do this with the `reboot` "
"command, or from your VPS/cloud hosting admin panel."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:102
msgid ""
"\\* *snap* is a method of packaging applications so they come with all of "
"the dependencies they need, and can run on almost any Linux system."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:106
msgid ""
"Installing LXD requires the use of the snap command. At this point, we are "
"just installing it, we are doing no set up:"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:112
msgid ""
"If you’re running LXD on a physical (AKA “bare metal”) server, you should "
"probably go back to the other guide and read the “Environment Setup” section "
"there. There’s a lot of good stuff about kernels and file systems, and so "
"much more."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:114
msgid ""
"If you’re running LXD in a virtual environment, just reboot and read on."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:130
msgid ""
"If you are interested in clustering, do some additional research on that "
"[here](https://linuxcontainers.org/lxd/docs/master/clustering/). Otherwise, "
"just press “Enter” to accept the default option."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:136
#, no-wrap
msgid " Accept the default.\n"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:137
#, no-wrap
msgid "Name of the new storage pool [default=default]: server-storage\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:142
msgid ""
"Choose a name for your storage pool. I like to name it after the server LXD "
"is running on. (A storage pool is basically a set amount of hard drive space "
"set aside for your containers.)"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:143
#, no-wrap
msgid "Name of the storage backend to use (btrfs, dir, lvm, zfs, ceph) [default=zfs]: lvm\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:148
msgid ""
"The above question is about what sort of file system you want to use for "
"storage, and the default may vary depending on what’s available on your "
"system. If you're on a bare metal server, and want to use ZFS, again, refer "
"back to the guide linked above."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:150
msgid ""
"In a virtual environment, I have found that “LVM” works fine, and it’s "
"usually what I use. You can accept the default on the next question."
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:151
#, no-wrap
msgid "Create a new LVM pool? (yes/no) [default=yes]:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:156
msgid ""
"If you have a specific hard drive or partition you’d like to use for the "
"whole storage pool, write “yes” next. If you’re doing all of this on a VPS, "
"you’ll probably *have* to choose “no”."
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:157
#, no-wrap
msgid "`Would you like to use an existing empty block device (e.g. a disk or partition)? (yes/no) [default=no]:`\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:162
msgid ""
"Metal As A Service (MAAS) is outside the scope of this document. Accept the "
"defaults for this next bit."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:168
msgid "And more defaults. It's all good."
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:169
#, no-wrap
msgid ""
"Would you like to create a new local network bridge? (yes/no) [default=yes]:\n"
"\n"
"What should the new bridge be called? [default=lxdbr0]: `\n"
"\n"
"What IPv4 address should be used? (CIDR subnet notation, “auto” or “none”) [default=auto]:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:178
msgid ""
"If you want to use IPv6 on your LXD containers, you can turn on this next "
"option. That is up to you, but you mostly shouldn’t need to. I think. I tend "
"to leave it on out of laziness."
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:179
#, no-wrap
msgid "What IPv6 address should be used? (CIDR subnet notation, “auto” or “none”) [default=auto]:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:184
msgid ""
"This is necessary to easily back up the server, and can allow you to manage "
"your LXD install from other computers. If that all sounds good to you, "
"answer \"yes\" here"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:190
msgid "If you did say yes to the last questions, take the defaults here:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:191
#, no-wrap
msgid ""
"Address to bind LXD to (not including port) [default=all]:\n"
"\n"
"Port to bind LXD to [default=8443]:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:198
msgid ""
"Now you'll be asked for a trust password. That's how you will connect to the "
"LXC host server from other computers and servers, so set this with something "
"that makes sense in your environment. Save this password to a secure "
"location, such as a password manager."
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:199
#, no-wrap
msgid ""
"Trust password for new clients:\n"
"\n"
"Again:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:206
msgid "And then keep taking the defaults from here on out:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:207
#, no-wrap
msgid ""
"Would you like stale cached images to be updated automatically? (yes/no) [default=yes]\n"
"\n"
"Would you like a YAML \"lxd init\" preseed to be printed? (yes/no) [default=no]:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:216
msgid ""
"Before we continue on, we need to create our \"lxdadmin\" user and make sure "
"that it has the privileges it needs. We need the \"lxdadmin\" user to be "
"able to use _sudo_ for access to root commands, and we need it to be a "
"member of the “lxd” group. To add the user and make sure it is a member of "
"both groups, run:"
msgstr ""

#. type: Title ##
#: ../src/docs/guides/containers/lxd_web_servers.md:229
#, no-wrap
msgid "Setting Up Your Firewall"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:232
msgid ""
"Before we do anything else with containers, you need to be able to access "
"your proxy server from the outside. If your firewall is blocking port 80 "
"(the default port used for HTTP/web traffic), or port 443 (used for HTTPS/"
"*secure* web traffic), then you won’t be doing much of anything server-wise."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:234
msgid ""
"The other LXD guide will show you how to do this with the *iptables* "
"firewall, if that’s what you want to do. I tend to use the CentOS default "
"firewall: *firewalld*. So that’s what we’re doing, this time."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:236
msgid ""
"`firewalld` is configured via the `firewall-cmd` command. **The absolute "
"first thing we want to do,** before we open any ports, is make sure that "
"your containers can be assigned their IP addresses automatically:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:237
#, no-wrap
msgid "firewall-cmd --zone=trusted --permanent --change-interface=lxdbr0\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:244
#, no-wrap
msgid "    If you don't do that last step, your containers will not be able to properly access the internet, or each other. This is crazy-essential, and knowing it will save you *ages* of frustration.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:246
msgid "Now, to add a new port, just run this:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:247
#, no-wrap
msgid "firewall-cmd --permanent --zone=public --add-port=80/tcp\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:252
#: ../src/docs/guides/web/nginx-mainline.md:113
msgid "Let’s break this down:"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:256
#: ../src/docs/guides/web/nginx-mainline.md:117
msgid ""
"The `-–permanent` flag tells the firewall to make sure this configuration is "
"used every time the firewall is restarted, and when the server itself is "
"restarted."
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:256
#: ../src/docs/guides/web/nginx-mainline.md:117
msgid ""
"`–-zone=public` tells the firewall to take incoming connections to this port "
"from everyone."
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:256
msgid ""
"Lastly, `–-add-port=80/tcp` tells the firewall to accept incoming "
"connections over port 80, as long as they’re using the Transmission Control "
"Protocol, which is what you want in this case."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:258
msgid ""
"To repeat the process for HTTPS traffic, just run the command again, and "
"change the number."
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:259
#, no-wrap
msgid "firewall-cmd --permanent --zone=public --add-port=443/tcp\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:264
msgid ""
"These configurations won’t take effect until you force the issue. To do "
"that, tell *firewalld* to reload its configurations, like so:"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:270
msgid ""
"Now, there’s a very small chance that this won’t work. In those rare cases, "
"make *firewalld* do your bidding with the old turn-it-off-and-turn-it-on-"
"again."
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:271
#: ../src/docs/guides/security/firewalld-beginners.md:70
#, no-wrap
msgid "systemctl restart firewalld\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:276
msgid ""
"To make sure the ports have been added properly, run `firewall-cmd --list-"
"all`. A properly-configured firewall will look a bit like this (I have a few "
"extra ports open on my local server, ignore them):"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:277
#, no-wrap
msgid ""
"public (active)\n"
"  target: default\n"
"  icmp-block-inversion: no\n"
"  interfaces: enp9s0\n"
"  sources:\n"
"  services: cockpit dhcpv6-client ssh\n"
"  ports: 81/tcp 444/tcp 15151/tcp 80/tcp 443/tcp\n"
"  protocols:\n"
"  forward: no\n"
"  masquerade: no\n"
"  forward-ports:\n"
"  source-ports:\n"
"  icmp-blocks:\n"
"  rich rules:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:295
#: ../src/docs/guides/web/nginx-mainline.md:168
msgid "And that should be everything you need, firewall-wise."
msgstr ""

#. type: Title ##
#: ../src/docs/guides/containers/lxd_web_servers.md:296
#, no-wrap
msgid "Setting Up The Containers"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:299
msgid ""
"Actually managing containers is pretty easy. Just think of it as being able "
"to conjure up a whole computer on command, and start or stop it at will. You "
"can also log into said “computer” and run any commands you like, just as you "
"would with your host server."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:303
#, no-wrap
msgid "    From here on out, every command should be run as the `lxdadmin` user, or whatever you decided to call it, though some will require the use of *sudo* for temporary root privileges.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:305
msgid ""
"You’re going to need three containers for this tutorial: the reverse proxy "
"server, a test Nginx server, and a test Apache server, all running on Rocky-"
"based containers."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:307
msgid ""
"If for some reason you need a fully privileged container (and you mostly "
"shouldn’t), you can run all of these commands as root."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:309
msgid "For this tutorial, you’ll need three containers:"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:311
msgid ""
"We’ll call them “proxy-server” (for the container that will be directing web "
"traffic to the other two containers), “nginx-server”, and “apache-server”. "
"Yes, I’ll be showing you how to reverse proxy to both *nginx* and *apache*-"
"based servers. Things like *docker* or NodeJS apps we can wait with until I "
"figure that out myself."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:313
msgid ""
"We’ll start by figuring out which image we want to base our containers on. "
"For this tutorial, we’re just using Rocky Linux. Using Alpine Linux, for "
"example, can result in much smaller containers (if storage is a concern), "
"but that’s beyond the scope of this particular document."
msgstr ""

#. type: Title ###
#: ../src/docs/guides/containers/lxd_web_servers.md:314
#, no-wrap
msgid "Finding the Image You Want"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:317
msgid ""
"Here’s the short, short method for starting a container with Rocky Linux:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:318
#, no-wrap
msgid "lxc launch images:rockylinux/8/amd64 my-container\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:323
msgid ""
"Of course, that “my-container” bit at the end should be renamed to whatever "
"container name you want, eg. “proxy-server”. The “/amd64” part should be "
"changed to “arm64” if you’re doing all of this on something like a Raspberry "
"Pi."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:325
msgid ""
"Now here’s the long version: to find the images you want, you can use this "
"command to list every available image in the main LXC repositories:"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:331
msgid ""
"Then just press “Enter” to scroll down a massive list of images, and press "
"“Control-C” to get out of the list-viewing mode."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:333
msgid ""
"Or, you could simplify your life, and specify what kind of Linux you want, "
"like so:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:334
#, no-wrap
msgid "lxc image list images: | grep rockylinux\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:339
msgid "That should print out a much shorter list that looks like this:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:340
#, no-wrap
msgid ""
"| rockylinux/8 (3 more)                    | 4e6beda70200 | yes    | Rockylinux 8 amd64 (20220129_03:44)          | x86_64       | VIRTUAL-MACHINE | 612.19MB  | Jan 29, 2022 at 12:00am (UTC) |\n"
"| rockylinux/8 (3 more)                    | c04dd2bcf20b | yes    | Rockylinux 8 amd64 (20220129_03:44)          | x86_64       | CONTAINER       | 127.34MB  | Jan 29, 2022 at 12:00am (UTC) |\n"
"| rockylinux/8/arm64 (1 more)              | adc0561d6330 | yes    | Rockylinux 8 arm64 (20220129_03:44)          | aarch64      | CONTAINER       | 124.03MB  | Jan 29, 2022 at 12:00am (UTC) |\n"
"| rockylinux/8/cloud (1 more)              | 2591d9716b04 | yes    | Rockylinux 8 amd64 (20220129_03:43)          | x86_64       | CONTAINER       | 147.04MB  | Jan 29, 2022 at 12:00am (UTC) |\n"
"| rockylinux/8/cloud (1 more)              | c963253fcea9 | yes    | Rockylinux 8 amd64 (20220129_03:43)          | x86_64       | VIRTUAL-MACHINE | 630.56MB  | Jan 29, 2022 at 12:00am (UTC) |\n"
"| rockylinux/8/cloud/arm64                 | 9f49e80afa5b | yes    | Rockylinux 8 arm64 (20220129_03:44)          | aarch64      | CONTAINER       | 143.15MB  | Jan 29, 2022 at 12:00am (UTC) |\n"
msgstr ""

#. type: Title ###
#: ../src/docs/guides/containers/lxd_web_servers.md:349
#, no-wrap
msgid "Creating the Containers"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:354
#, no-wrap
msgid "    Below, is a quick way to create all of these containers. You may want to wait before creating the proxy-server container. There's a trick I'll show you down below that could save you time.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:356
msgid ""
"Once you’ve found the image you want, use the `lxc launch` command as shown "
"above. To make the containers we want for this tutorial, run these commands "
"(modifying them as needed) in succession:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:357
#, no-wrap
msgid ""
"lxc launch images:rockylinux/8/amd64 proxy-server\n"
"lxc launch images:rockylinux/8/amd64 nginx-server\n"
"lxc launch images:rockylinux/8/amd64 apache-server\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:364
msgid ""
"As you run each command, you should get a notification that your containers "
"have been created, and even started. Then, you’ll want to check on all of "
"them."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:366
msgid "Run this command to see that they’re all up and running:"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:372
msgid ""
"That should give you output that looks a bit like this (though, if you opted "
"to use IPv6, it’s going to be a lot more text):"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:373
#, no-wrap
msgid ""
"+---------------+---------+-----------------------+------+-----------+-----------+\n"
"|     NAME      |  STATE  |         IPV4          | IPV6 |   TYPE    | SNAPSHOTS |\n"
"+---------------+---------+-----------------------+------+-----------+-----------+\n"
"| proxy-server  | RUNNING | 10.199.182.231 (eth0) |      | CONTAINER | 0         |\n"
"+---------------+---------+-----------------------+------+-----------+-----------+\n"
"| nginx-server  | RUNNING | 10.199.182.232 (eth0) |      | CONTAINER | 0         |\n"
"+---------------+---------+-----------------------+------+-----------+-----------+\n"
"| apache-server | RUNNING | 10.199.182.233 (eth0) |      | CONTAINER | 0         |\n"
"+---------------+---------+-----------------------+------+-----------+-----------+\n"
msgstr ""

#. type: Title ####
#: ../src/docs/guides/containers/lxd_web_servers.md:385
#, no-wrap
msgid "A Word on Container Networking"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:388
msgid ""
"So the other guide linked at the beginning of this one has a whole tutorial "
"on how to set LXC/LXD up to work with Macvlan. This is especially useful if "
"you’re running a local server, and you want each container to have an IP "
"address visible on the local network."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:390
msgid ""
"When you’re running on a VPS, you don’t often have that option. In fact, you "
"might only have one single IP address that you’re allowed to work with. No "
"biggie. The default networking configuration is designed to accommodate this "
"sort of limitation; answering the `lxd init` questions as I specified above "
"*should* take care of everything."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:392
msgid ""
"Basically, LXD creates a virtual network device called a bridge (usually "
"named “lxdbr0”), and all containers get connected to that bridge by default. "
"Through it, they can connect to the internet via your host’s default network "
"device (ethernet, wi-fi, or a virtual network device provided by your VPS). "
"Somewhat more importantly, all of the containers can connect to each other."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:394
msgid ""
"To ensure this inter-container connection, *every container gets an internal "
"domain name*. By default, this is just the name of the container plus “."
"lxd”. So the “proxy-server” container is available to all the other "
"containers at “proxy-server.lxd”. But here’s the *really* important thing to "
"know: by **default “.lxd” domains are only available inside the containers "
"themselves.**"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:396
msgid ""
"If you run `ping proxy-server.lxd` on the host OS (or anywhere else), you’ll "
"get nothing. Those internal domains are going to come in super handy later "
"on, though."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:398
msgid ""
"You can technically change this, and make the container’s internal domains "
"available on the host… but I never actually figured that out. It’s probably "
"best to put your reverse proxy server in a container anyway, so you can "
"snapshot and back it up with ease."
msgstr ""

#. type: Title ###
#: ../src/docs/guides/containers/lxd_web_servers.md:399
#, no-wrap
msgid "Managing Your Containers"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:402
msgid "Some things you should know before going forward:"
msgstr ""

#. type: Title ####
#: ../src/docs/guides/containers/lxd_web_servers.md:403
#, no-wrap
msgid "Starting & Stopping"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:406
msgid ""
"All containers can be started, stopped, and restarted as needed with the "
"following commands:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:407
#, no-wrap
msgid ""
"lxc start mycontainer\n"
"lxc stop mycontainer\n"
"lxc restart mycontainer\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:414
msgid ""
"Hey, even Linux needs to reboot sometimes. And heck, you can actually start, "
"stop, and restart all containers at once with the following commands."
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:415
#, no-wrap
msgid ""
"lxc start --all\n"
"lxc stop --all\n"
"lxc restart --all\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:422
msgid ""
"That `restart --all` option comes in real handy for some of the more obscure "
"temporary bugs."
msgstr ""

#. type: Title ####
#: ../src/docs/guides/containers/lxd_web_servers.md:423
#, no-wrap
msgid "Doing Stuff Inside Your Containers"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:426
msgid ""
"You can control the operating system inside your container in two ways: you "
"can just run commands inside them from the host OS, or you can open a shell."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:428
msgid ""
"Here’s what I mean. To run a command inside a container, maybe to install "
"*Apache*, just use `lxc exec`, like so:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:429
#, no-wrap
msgid "lxc exec my-container dnf install httpd -y\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:434
msgid ""
"That will make *Apache* install on its own, and you will see the output of "
"the command on your host’s terminal."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:436
msgid ""
"To open a shell (where you can just run all the commands you want as root), "
"use this:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:437
#, no-wrap
msgid "lxc exec my-container bash\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:442
msgid ""
"If you’re like me, valuing convenience over storage space, and have "
"installed an alternate shell like *fish* in all of your containers, just "
"change the command like so:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:443
#, no-wrap
msgid "lxc exec my-container fish\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:448
msgid ""
"In almost all instances, you’ll automatically be placed on the root account, "
"and in the `/root` directory."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:450
msgid ""
"Finally, if you've opened a shell into a container, you leave it the same "
"way you leave any shell: with a simple `exit` command."
msgstr ""

#. type: Title ####
#: ../src/docs/guides/containers/lxd_web_servers.md:451
#, no-wrap
msgid "Copying Containers"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:454
msgid ""
"Now, if you have a container you’d like to replicate with minimal effort, "
"you don’t need to start a brand new one and install all of your base "
"applications again. That’d be silly. Just run:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:455
#, no-wrap
msgid "lxc copy my-container my-other-container\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:460
msgid ""
"An exact copy of “my-container” will be created with the name “my-other-"
"container”. It may not start automatically though, so make any changes you "
"might want to make to your new container’s configuration, then run:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:461
#, no-wrap
msgid "lxc start my-other-container\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:466
msgid ""
"At this point, you may want to make some changes, like changing the "
"container’s internal hostname, or something."
msgstr ""

#. type: Title ####
#: ../src/docs/guides/containers/lxd_web_servers.md:467
#, no-wrap
msgid "Configuring Storage & CPU Limits"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:470
msgid ""
"LXC/LXD usually defines how much storage space a container gets, and "
"generally manages resources, but you might want control over that. If you’re "
"worried about keeping your containers small, you can use the `lxc config` "
"command to shrink and stretch them as needed."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:472
msgid ""
"The following command will set a “soft” limit of 2GB on a container. A soft "
"limit is actually more of a “minimum storage”, and the container will use "
"more storage if it’s available. As always, change “my-container” to the name "
"of the actual container."
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:473
#, no-wrap
msgid "lxc config set my-container limits.memory 2GB\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:478
msgid "You can set a hard limit like so:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:479
#, no-wrap
msgid "lxc config set my-container limits.memory.enforce 2GB\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:484
msgid ""
"And if you want to make sure that any given container can’t take over all "
"the processing power available to your server, you can limit the CPU cores "
"it has access to with this command. Just change the number of CPU cores at "
"the end as you see fit."
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:485
#, no-wrap
msgid "lxc config set my-container limits.cpu 2\n"
msgstr ""

#. type: Title ####
#: ../src/docs/guides/containers/lxd_web_servers.md:489
#, no-wrap
msgid "Deleting Containers (and How to Keep That From Happening)"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:492
msgid "Lastly, you can delete containers by running this command:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:493
#, no-wrap
msgid "lxc delete my-container\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:498
msgid ""
"You won’t be able to delete the container if it’s running, so you can either "
"stop it first, or use the `-–force` flag to skip that part."
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:499
#, no-wrap
msgid "lxc delete my-container --force\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:504
msgid ""
"Now, thanks to tab -command-completion, user error, and the fact that “d” "
"sits next to “s” on most keyboards, you can accidentally delete containers. "
"This is known, in the business, as THE BIG OOPS. (Or at least it’ll be known "
"as THE BIG OOPS when I’m done here.)"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:506
msgid ""
"To defend against that, you can set any container to be “protected” (making "
"the process of deleting them take an extra step) with this command:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:507
#, no-wrap
msgid "lxc config set my-container security.protection.delete true\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:512
msgid ""
"To un-protect the container, just run the command again, but change “true” "
"to “false”."
msgstr ""

#. type: Title ##
#: ../src/docs/guides/containers/lxd_web_servers.md:513
#, no-wrap
msgid "Setting Up The Servers"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:516
msgid ""
"Okay, now that your containers are up and running, it’s time to install what "
"you need. First, make sure all of them are updated with the following "
"commands (skip the “proxy-server” container if you haven’t created it yet):"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:517
#, no-wrap
msgid ""
"lxc exec proxy-server dnf update -y\n"
"lxc exec nginx-server dnf update -y\n"
"lxc exec apache-server dnf update -y\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:524
msgid "Then, jump into each container, and get cracking."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:526
msgid ""
"You’ll also need a text editor for every container. By default, Rocky Linux "
"comes with *vi*, but if you want to simplify your life, *nano* will do. You "
"can install it in each container before you open them up."
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:527
#, no-wrap
msgid ""
"lxc exec proxy-server dnf install nano -y\n"
"lxc exec nginx-server dnf install nano -y\n"
"lxc exec apache-server dnf install nano -y\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:534
msgid ""
"I’ll be using *nano* in all of the text-editor-related commands going "
"forward, but you do you."
msgstr ""

#. type: Title ###
#: ../src/docs/guides/containers/lxd_web_servers.md:535
#, no-wrap
msgid "The Apache website server"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:538
msgid ""
"We're going to keep this short, for learning and testing purposes. Look "
"below for a link to your full Apache guides."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:540
msgid ""
"First, open up a shell into your container. Note that by default, containers "
"will drop you into the root account. For our purposes, that's fine, though "
"you may want to create a specific web server user for actual production "
"purposes."
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:541
#, no-wrap
msgid "lxc exec apache-server bash\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:546
msgid "Once you’re logged in, just install *Apache* the easy way:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:547
#, no-wrap
msgid "dnf install httpd\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:552
msgid ""
"Now, you could follow our [Apache Web Server Multi-Site Setup guide](../web/"
"apache-sites-enabled.md) from here on out, but that’s actually kind of "
"overkill for our purposes. We don’t usually want to set up Apache for "
"multiple websites in a containerized environment like this. The whole point "
"of containers is a separation of concerns, after all."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:554
msgid ""
"Also, the SSL certificates are going on the proxy server, so we’re going to "
"keep things simple."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:556
msgid ""
"Once *Apache* is installed, make sure it’s running, and can keep running on "
"reboot:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:557
#: ../src/docs/guides/file_sharing/sftp.md:196
#, no-wrap
msgid "systemctl enable --now httpd\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:562
msgid ""
"The `--now` flag lets you skip the command to start the actual server. For "
"reference, that would be:"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:568
msgid ""
"If you have `curl` installed on your server host, you can make sure the "
"default web page is up and running with:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:569
#, no-wrap
msgid "curl [container-ip-address]\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:574
msgid ""
"Remember, you can see all container IPs with `lxc list`. And if you install "
"curl on all your containers, you *could* just run:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:575
#, no-wrap
msgid "curl localhost\n"
msgstr ""

#. type: Title ####
#: ../src/docs/guides/containers/lxd_web_servers.md:579
#, no-wrap
msgid "Getting real user IPs from the proxy server"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:582
msgid ""
"Now here's a step that you'll need to do to prepare Apache for using the "
"reverse proxy. By default, the actual IP addresses of users will not be "
"logged by the servers in your web server containers. You want those IP "
"addresses to go through because some web apps need user IPs for things like "
"moderation, banning, and troubleshooting."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:584
msgid ""
"To make your visitor's IP addresses get past the proxy server, you need two "
"parts: the right settings in the proxy server (we'll cover that later), and "
"a simple configuration file for the Apache server."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:586
msgid ""
"A big thanks goes out to Linode and [their own LXD guide](https://www.linode."
"com/docs/guides/beginners-guide-to-lxd-reverse-proxy) for the templates for "
"these config files."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:588
msgid "Make a new config file:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:589
#, no-wrap
msgid "nano /etc/httpd/conf.d/real-ip.conf\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:594
msgid "And add this text to it:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:595
#, no-wrap
msgid ""
"RemoteIPHeader X-Real-IP\n"
"RemoteIPTrustedProxy proxy-server.lxd\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:601
msgid ""
"Remember to change `proxy-server.lxd` to whatever you called your actual "
"proxy container, if necessary. Now **don't restart the Apache server just "
"yet.** That configuration file we added could cause problems *until* we get "
"the proxy server up and running."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:603
msgid "Exit the shell for now, and let's start on the Nginx server."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:607
#, no-wrap
msgid "    While this technique *does* work (your web apps and websites will get the users' real IPs), Apache's own access logs *will not show the right IPs.* They'll usually show the IP of the container that your reverse proxy is in. This is apparently a problem with how Apache logs things.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:609
#, no-wrap
msgid "    I've found loads of solutions on Google, and none of them have actually worked for me. Watch this space for someone much smarter than I am to figure it out. In the meantime, you can check the proxy server's access logs if you need to see the IP addresses yourself, or check the logs of whatever web app you're installing.\n"
msgstr ""

#. type: Title ###
#: ../src/docs/guides/containers/lxd_web_servers.md:610
#, no-wrap
msgid "The Nginx website server"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:613
msgid ""
"Again, we're keeping this short. If you want to use the latest (and "
"recommended) version of Nginx in production, check out our [beginner's guide "
"to installing Nginx](../web/nginx-mainline.md). That covers the full install "
"guide, and some best practices for configuring your server."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:615
msgid ""
"For testing and learning, you *could* just install Nginx normally, but I "
"recommend installing the latest version, which is called the \"mainline\" "
"branch."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:617
msgid "First, log into the container's shell:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:618
#, no-wrap
msgid "lxc exec nginx-server bash\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:623
msgid ""
"Then, install the `epel-release` repository so you can install the latest "
"version of Nginx:"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:629
msgid "Once that's done, search for the latest version of Nginx with:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:630
#, no-wrap
msgid "dnf module list nginx\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:635
#: ../src/docs/guides/web/nginx-mainline.md:308
msgid "That should get you a list that looks like this:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:636
#, no-wrap
msgid ""
"Rocky Linux 8 - AppStream\n"
"Name       Stream        Profiles        Summary\n"
"nginx      1.14 [d]      common [d]      nginx webserver\n"
"nginx      1.16          common [d]      nginx webserver\n"
"nginx      1.18          common [d]      nginx webserver\n"
"nginx      1.20          common [d]      nginx webserver\n"
"nginx      mainline      common [d]      nginx webserver\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:647
msgid ""
"The one you want is, you guessed it: the mainline branch. Enable the module "
"with this command:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:648
#, no-wrap
msgid "dnf enable module nginx:mainline\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:653
msgid ""
"You'll be asked if you're sure you want to do this, so just choose `Y` as "
"usual. Then, use the default command to install Nginx:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:654
#, no-wrap
msgid "dnf install nginx\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:659
msgid "Then, enable and start Nginx:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:660
#, no-wrap
msgid "dnf enable --now nginx\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:667
#, no-wrap
msgid "    Remember when I said to wait before creating the proxy container? Here's why: at this point, you can save yourself some time by leaving the \"nginx-server\" container, and copying it to make the \"proxy-server\" container:\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:671
#, no-wrap
msgid ""
"    ```bash\n"
"    lxc copy nginx-server proxy-server\n"
"    ```\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:673
#, no-wrap
msgid "    Make sure to start the proxy container with `lxc start proxy-server`, and add the proxy ports to the container as detailed below.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:675
msgid "Again, you can make sure the container is working from the host with:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:676
#, no-wrap
msgid "curl [your-container-ip]\n"
msgstr ""

#. type: Title ####
#: ../src/docs/guides/containers/lxd_web_servers.md:680
#, no-wrap
msgid "Getting real user IPs from the proxy server (again)"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:683
msgid ""
"The logs *should* work this time. Should. To do this, we're putting a very "
"similar file in `/etc/nginx/conf.d`:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:684
#, no-wrap
msgid "nano /etc/nginx/conf.d/real-ip.conf\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:689
msgid "Then put this text in it:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:690
#, no-wrap
msgid ""
"real_ip_header    X-Real-IP;\n"
"set_real_ip_from  proxy-server.lxd;\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:696
msgid ""
"Lastly, **don't restart the server yet**. Again, that config file could "
"cause problems until the proxy server is set up."
msgstr ""

#. type: Title ###
#: ../src/docs/guides/containers/lxd_web_servers.md:697
#, no-wrap
msgid "The Reverse Proxy Server"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:700
msgid ""
"So remember when I said you'd need two domains or subdomains? This is where "
"you need them. The subdomains I'm using for this tutorial are:"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:703
msgid "apache.server.test"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:703
msgid "nginx.server.test"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:705
msgid "Change them in all the files and instructions as needed."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:707
msgid ""
"If you copied the \"proxy-server\" container from your \"nginx-server\" "
"container, and you've added your proxy devices to it, just jump on into the "
"shell. If you created the container earlier, you'll need to repeat all the "
"steps for installing Nginx in the \"proxy-server\" container."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:709
msgid ""
"Once it's installed and you know it runs okay, you just need to set up a "
"couple of configuration files to direct traffic from your chosen domains to "
"the actual website servers."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:711
msgid ""
"Before you do that, make sure you can access both servers via their internal "
"domains:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:712
#, no-wrap
msgid ""
"curl apache-server.lxd\n"
"curl nginx-server.lxd\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:718
msgid ""
"If those two commands load the HTML of the default server welcome pages in "
"your terminal, then everything has been set up correctly."
msgstr ""

#. type: Title ####
#: ../src/docs/guides/containers/lxd_web_servers.md:719
#, no-wrap
msgid "*Essential Step:* Configuring the “proxy-server” Container to Take all Incoming Server Traffic"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:722
msgid ""
"Again, you might want to do this later when you actually create the proxy "
"server, but here are the instructions you'll need:"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:724
msgid ""
"Remember when we opened up ports 80 and 443 in the firewall? Here’s where we "
"make the “proxy-server” container listen to those ports, and take all the "
"traffic directed at them."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:726
msgid "Just run these two commands in succession:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:727
#, no-wrap
msgid ""
"lxc config device add proxy-server myproxy80 proxy listen=tcp:0.0.0.0:80 connect=tcp:127.0.0.1:80\n"
"lxc config device add proxy-server myproxy443 proxy listen=tcp:0.0.0.0:443 connect=tcp:127.0.0.1:443\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:733
msgid ""
"Let’s break that down. Each command is adding a virtual “device” to the "
"proxy-server container. Those devices are set to listen on the host OS’ port "
"80 and port 443, and bind them to the container’s port 80 and port 443. Each "
"device needs a name, so I’ve chosen “myproxy80”, and “myproxy443”."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:735
msgid ""
"The “listen” option is the port on the host OS, and if I’m not mistaken, "
"0.0.0.0 is the IP address for the host on the “lxdbr0” bridge. The “connect” "
"option is the local IP address and ports being connected to."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:739
#, no-wrap
msgid "    Once these devices have been set up, you should reboot all the containers, just to be sure.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:741
msgid ""
"These virtual device should ideally be unique. It's usually best not to add "
"a “myport80” device to another container that's currently running; it’ll "
"have to be called something else."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:743
#, no-wrap
msgid "*Likewise, only one container can listen on any specific host OS port at a time.*\n"
msgstr ""

#. type: Title ####
#: ../src/docs/guides/containers/lxd_web_servers.md:744
#, no-wrap
msgid "Directing traffic to the Apache server"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:747
msgid ""
"In the \"proxy-server\" container, create a configuration file called "
"`apache-server.conf` in `/etc/nginx/conf.d/`:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:748
#, no-wrap
msgid "nano /etc/nginx/conf.d/apache-server.conf\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:753
msgid ""
"Then paste this test in, change the domain name as necessary, and save it:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:754
#, no-wrap
msgid ""
"upstream apache-server {\n"
"    server apache-server.lxd:80;\n"
"}\n"
"\n"
"server {\n"
"    listen 80 proxy_protocol;\n"
"    listen [::]:80 proxy_protocol;\n"
"    server_name apache.server.test; #< Your domain goes here\n"
"\n"
"    location / {\n"
"        proxy_pass http://apache-server;\n"
"\n"
"        proxy_redirect off;\n"
"        proxy_set_header Host $host;\n"
"        proxy_set_header X-Real-IP $remote_addr;\n"
"        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n"
"        proxy_set_header X-Forwarded-Proto $scheme;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:777
msgid "Let's break that down a little:"
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:784
msgid ""
"The `upstream` section is defining exactly where the reverse proxy is going "
"to send all its traffic. Specifically, it's sending traffic to the \"apache-"
"server\" container's internal domain name: `apache-server.lxd`."
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:784
msgid ""
"The two lines that start with `listen` are telling the server to listen to "
"traffic coming in on port 80 with the proxy protocol. The first via IPv4, "
"and the second via IPv6."
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:784
msgid ""
"The `server_name` function takes all the traffic that's specifically coming "
"to \"apache.server.test\" and routes it through the reverse proxy."
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:784
msgid ""
"The `proxy-pass` function is the part that actually directs all traffic "
"captured by the `server_name` variable, and sends it to the server defined "
"in the `upstream` section."
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:784
msgid ""
"The `proxy_redirect` function can apparently interfere with reverse proxies, "
"so we're making sure it's turned off."
msgstr ""

#. type: Bullet: '* '
#: ../src/docs/guides/containers/lxd_web_servers.md:784
msgid ""
"All of the `proxy-set-header` options are sending information like the "
"user's IP and more to the web server."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:788
#, no-wrap
msgid "    The `proxy_protocol` bit in the `listen` variables is *essential* for the proxy server to work. Never leave it out.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:790
msgid ""
"For every LXD/website configuration file, you'll need to change the "
"`upstream`, `server`, `server_name`, and `proxy_pass` settings accordingly. "
"The text after \"http://\" in `proxy-pass` must match the txt that comes "
"after the `upstream` text."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:792
msgid ""
"Reload the server with `systemctl restart nginx`, then point your browser at "
"whatever domain you're using instead of `apache.server.test`. If you see a "
"page that looks like this, you're golden:"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:794
msgid ""
"![A screenshot of the default Rocky Linux Apache welcome page](../images/lxd-"
"web-server-03.png)"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:798
#, no-wrap
msgid "    You can name the config files whatever you like. I'm using simplified names for the tutorials, but some sysadmins recommend names based on the actual domain, but backwards. It's an alphabetical order-based organization thing.\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:800
#, no-wrap
msgid "    eg. \"apache.server.test\" would get a configuration file named `test.server.apache.conf`.\n"
msgstr ""

#. type: Title ####
#: ../src/docs/guides/containers/lxd_web_servers.md:800
#, no-wrap
msgid "Directing traffic to the Nginx server"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:803
msgid "Just kinda repeat the process. Create a file just like before:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:804
#, no-wrap
msgid "nano /etc/nginx/conf.d/nginx-server.conf\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:809
msgid "Add the approriate text:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:810
#, no-wrap
msgid ""
"upstream nginx-server {\n"
"    server rocky-nginx.lxd:80;\n"
"}\n"
"\n"
"server {\n"
"    listen 80 proxy_protocol;\n"
"    listen [::]:80 proxy_protocol;\n"
"    server_name nginx.server.test; #< Your domain goes here\n"
"\n"
"    location / {\n"
"        proxy_pass http://nginx-server;\n"
"\n"
"        proxy_redirect off;\n"
"        proxy_set_header Host $host;\n"
"        proxy_set_header X-Real-IP $remote_addr;\n"
"        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n"
"        proxy_set_header X-Forwarded-Proto $scheme;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:833
msgid ""
"Again, reload the proxy server, point your browser at the appropriate "
"address, and hope to whatever deity your prefer that you see this:"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:835
msgid ""
"![A screenshot of the default Rocky Linux Nginx welcome page](../images/lxd-"
"web-server-04.png)"
msgstr ""

#. type: Title ####
#: ../src/docs/guides/containers/lxd_web_servers.md:836
#, no-wrap
msgid "Restart the servers in your web server containers"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:839
msgid ""
"Exit back out of the \"proxy-server\" container, and restart the servers in "
"your other two containers with one simple command:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:840
#, no-wrap
msgid "lxc exec apache-server systemctl restart httpd && lxc exec nginx-server restart nginx\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:845
msgid ""
"That will apply the \"real-ip.conf\" files we made to their respective "
"server configurations."
msgstr ""

#. type: Title ####
#: ../src/docs/guides/containers/lxd_web_servers.md:846
#, no-wrap
msgid "Getting SSL certificates for your websites"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:848
msgid ""
"Getting official, proper SSL certificates is easiest with Let's Encrypt, and "
"a little application called certbot. certbot will automatically detect your "
"websites, get SSL certificates for them, and configure the sites themselves. "
"It will even renew the certificates for you every 30 days or so, without any "
"intervention from you or cron jobs."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:850
msgid ""
"This all has to be done from the \"proxy-server\" container, so log into "
"that shell. Once there, install the EPEL repositories, just like you did on "
"the host. Make sure the container is updated first:"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:856
msgid "Then, add the EPEL repository:"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:862
msgid "Then you just need to install certbot and its Nginx module:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:863
#: ../src/docs/guides/security/generating_ssl_keys_lets_encrypt.md:65
#, no-wrap
msgid "dnf install certbot python3-certbot-nginx\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:868
msgid ""
"Once installed, as long as you already have a couple of websites configured, "
"just run:"
msgstr ""

#. type: Fenced code block (bash)
#: ../src/docs/guides/containers/lxd_web_servers.md:869
#: ../src/docs/guides/security/generating_ssl_keys_lets_encrypt.md:225
#, no-wrap
msgid "certbot --nginx\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:874
msgid ""
"Certbot will read your Nginx configuration, and figure out how many websites "
"you have and if they need SSL certificates. At this point, you'll be asked a "
"few questions. Do you accept the terms of service, do you want emails, etc?"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:876
msgid ""
"The most important questions are as follows. Enter your email address when "
"you see this:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:877
#, no-wrap
msgid ""
"Saving debug log to /var/log/letsencrypt/letsencrypt.log\n"
"Enter email address (used for urgent renewal and security notices)\n"
" (Enter 'c' to cancel):\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:884
msgid ""
"Here you can choose which websites get certificates. Just hit enter to get "
"certificates for all of them."
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:885
#, no-wrap
msgid ""
"Which names would you like to activate HTTPS for?\n"
"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n"
"1: apache.server.test\n"
"2: nginx.server.test\n"
"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n"
"Select the appropriate numbers separated by commas and/or spaces, or leave input\n"
"blank to select all options shown (Enter 'c' to cancel):\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:896
msgid ""
"You'll see a bunch of confirmation text, and it'll be done. But if you go to "
"your websites, you might find that they don't work. This is because when "
"certbot creates the updated configuration, it forgets one very important "
"thing."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:898
msgid ""
"Go into your `apache-server.conf` and `nginx-server.conf` files, and find "
"the following two lines:"
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:899
#, no-wrap
msgid ""
"listen [::]:443 ssl ipv6only=on; # managed by Certbot\n"
"listen 443 ssl; # managed by Certbot\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:905
msgid ""
"Yep, they're missing the `proxy_protocol` setting, and that's bad. Add it in "
"yourself."
msgstr ""

#. type: Fenced code block
#: ../src/docs/guides/containers/lxd_web_servers.md:906
#, no-wrap
msgid ""
"listen proxy_protocol [::]:443 ssl ipv6only=on; # managed by Certbot\n"
"listen proxy_protocol 443 ssl; # managed by Certbot\n"
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:912
msgid ""
"Save the file, restart the server, and your websites should load without any "
"issue."
msgstr ""

#. type: Bullet: '1. '
#: ../src/docs/guides/containers/lxd_web_servers.md:918
msgid ""
"In this tutorial, I didn't mention configuring the actual web servers much. "
"The very least you should do, in production, is change the domains names in "
"the server config files in your actual web server containers, and not just "
"the proxy container. And maybe set up a web server user in each."
msgstr ""

#. type: Bullet: '2. '
#: ../src/docs/guides/containers/lxd_web_servers.md:918
msgid ""
"If you want to know a bit more about managing SSL certificates and SSL "
"server configurations manually, check out [our guide to installing certbot "
"and generating SSL certificates](../security/"
"generating_ssl_keys_lets_encrypt.md)."
msgstr ""

#. type: Bullet: '3. '
#: ../src/docs/guides/containers/lxd_web_servers.md:918
msgid ""
"Apps like Nextcloud will require some extra configuration (for security "
"reasons) if you put them in an LXD container behind a proxy."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:922
msgid ""
"There's a lot more to learn about LXC/LXD, containerization, web servers, "
"and running websites, but that should honestly give you a good start. Once "
"you learn how everything should be set up, and how to configure things the "
"way you like, you can even begin to automate the process."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:924
msgid ""
"You might use Ansible, or you might be like me, and just have a custom-"
"written set of scripts that you run to make everything go faster. You can "
"even create small \"template containers\" with all of your favorite software "
"preinstalled, then just copy them and expand their storage capacity as "
"needed."
msgstr ""

#. type: Plain text
#: ../src/docs/guides/containers/lxd_web_servers.md:925
msgid "Okay. This is done. I'm off to play video games. Have fun!"
msgstr ""
